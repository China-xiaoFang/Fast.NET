<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Fast.NET.Core</name>
    </assembly>
    <members>
        <member name="T:System.ApiInfoAttribute">
            <summary>
            <see cref="T:System.ApiInfoAttribute"/> 接口信息
            </summary>
        </member>
        <member name="P:System.ApiInfoAttribute.ApiName">
            <summary>
            Api名称
            </summary>
        </member>
        <member name="P:System.ApiInfoAttribute.ApiAction">
            <summary>
            接口操作方式
            </summary>
        </member>
        <member name="P:System.ApiInfoAttribute.TagList">
            <summary>
            接口权限标识集合
            </summary>
        </member>
        <member name="M:System.ApiInfoAttribute.#ctor(System.String)">
            <summary>
            <see cref="T:System.ApiInfoAttribute"/> 接口名称
            </summary>
            <param name="apiName"><see cref="T:System.String"/> Api名称</param>
        </member>
        <member name="M:System.ApiInfoAttribute.#ctor(System.String,System.HttpRequestActionEnum)">
            <summary>
            <see cref="T:System.ApiInfoAttribute"/> 接口名称
            </summary>
            <param name="apiName"><see cref="T:System.String"/> Api名称</param>
            <param name="apiAction"><see cref="T:System.HttpRequestActionEnum"/> 接口操作方式</param>
        </member>
        <member name="M:System.ApiInfoAttribute.#ctor(System.String,System.HttpRequestActionEnum,System.String[])">
            <summary>
            <see cref="T:System.ApiInfoAttribute"/> 接口名称
            </summary>
            <param name="apiName"><see cref="T:System.String"/> Api名称</param>
            <param name="apiAction"><see cref="T:System.HttpRequestActionEnum"/> 接口操作方式</param>
            <param name="tagArray"><see cref="T:System.Array"/> 接口权限标识</param>
        </member>
        <member name="T:System.MapHubAttribute">
            <summary>
            <see cref="T:System.MapHubAttribute"/> 集线器配置特征
            </summary>
        </member>
        <member name="P:System.MapHubAttribute.Pattern">
            <summary>
            配置终点路由地址
            </summary>
        </member>
        <member name="M:System.MapHubAttribute.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="pattern"></param>
        </member>
        <member name="T:System.AppEnvironmentEnum">
            <summary>
            <see cref="T:System.AppEnvironmentEnum"/> App运行环境枚举
            </summary>
        </member>
        <member name="F:System.AppEnvironmentEnum.Web">
            <summary>
            Web
            </summary>
        </member>
        <member name="F:System.AppEnvironmentEnum.Windows">
            <summary>
            Windows
            </summary>
        </member>
        <member name="F:System.AppEnvironmentEnum.Mac">
            <summary>
            Mac
            </summary>
        </member>
        <member name="F:System.AppEnvironmentEnum.Linux">
            <summary>
            Linux
            </summary>
        </member>
        <member name="F:System.AppEnvironmentEnum.Android">
            <summary>
            Android
            </summary>
        </member>
        <member name="F:System.AppEnvironmentEnum.IOS">
            <summary>
            IOS
            </summary>
        </member>
        <member name="F:System.AppEnvironmentEnum.QuickApp">
            <summary>
            快应用
            </summary>
        </member>
        <member name="F:System.AppEnvironmentEnum.WeChatMiniProgram">
            <summary>
            微信小程序
            </summary>
        </member>
        <member name="F:System.AppEnvironmentEnum.QQMiniProgram">
            <summary>
            QQ小程序
            </summary>
        </member>
        <member name="F:System.AppEnvironmentEnum.TiktokMiniProgram">
            <summary>
            抖音小程序
            </summary>
        </member>
        <member name="F:System.AppEnvironmentEnum.BaiduMiniProgram">
            <summary>
            百度小程序
            </summary>
        </member>
        <member name="F:System.AppEnvironmentEnum.AlipayMiniProgram">
            <summary>
            支付宝小程序
            </summary>
        </member>
        <member name="F:System.AppEnvironmentEnum.KuaishouMiniProgram">
            <summary>
            快手小程序
            </summary>
        </member>
        <member name="F:System.AppEnvironmentEnum.FeishuMiniProgram">
            <summary>
            飞书小程序
            </summary>
        </member>
        <member name="F:System.AppEnvironmentEnum.DingTalkMiniProgram">
            <summary>
            钉钉小程序
            </summary>
        </member>
        <member name="F:System.AppEnvironmentEnum.JDMiniProgram">
            <summary>
            京东小程序
            </summary>
        </member>
        <member name="F:System.AppEnvironmentEnum.XiaohongshuMiniProgram">
            <summary>
            小红书小程序
            </summary>
        </member>
        <member name="F:System.AppEnvironmentEnum.Api">
            <summary>
            Api
            </summary>
        </member>
        <member name="F:System.AppEnvironmentEnum.Other">
            <summary>
            其他
            </summary>
        </member>
        <member name="F:System.AppEnvironmentEnum.Client">
            <summary>
            客户端
            </summary>
        </member>
        <member name="F:System.AppEnvironmentEnum.Mobile">
            <summary>
            移动端
            </summary>
        </member>
        <member name="F:System.AppEnvironmentEnum.MiniProgram">
            <summary>
            小程序
            </summary>
        </member>
        <member name="T:System.EnvironmentTypeEnum">
            <summary>
            <see cref="T:System.EnvironmentTypeEnum"/> 环境类型枚举
            </summary>
        </member>
        <member name="F:System.EnvironmentTypeEnum.Production">
            <summary>
            Production 生产环境
            </summary>
            <remarks>生产，正式环境</remarks>
        </member>
        <member name="F:System.EnvironmentTypeEnum.Development">
            <summary>
            Development 开发环境
            </summary>
            <remarks>本地，开发环境</remarks>
        </member>
        <member name="F:System.EnvironmentTypeEnum.Test">
            <summary>
            Test 测试环境
            </summary>
            <remarks>测试环境，功能测试，验证新功能或修复问题</remarks>
        </member>
        <member name="F:System.EnvironmentTypeEnum.UAT">
            <summary>
            UAT 测试验收环境
            </summary>
            <remarks>测试验收环境，用于测试是否符合需求和预期</remarks>
        </member>
        <member name="F:System.EnvironmentTypeEnum.PreProduction">
            <summary>
            PreProduction 预生产环境
            </summary>
            <remarks>预生产环境，用于最后的测试和验证</remarks>
        </member>
        <member name="F:System.EnvironmentTypeEnum.GrayDeployment">
            <summary>
            GrayDeployment 灰度环境
            </summary>
            <remarks>灰度环境，用于部署新版本到生产环境之前进行有限范围的测试和验收的环境</remarks>
        </member>
        <member name="F:System.EnvironmentTypeEnum.StressTest">
            <summary>
            StressTest 压测环境
            </summary>
            <remarks>压测环境，用于压力测试的环境</remarks>
        </member>
        <member name="T:System.HttpRequestActionEnum">
            <summary>
            <see cref="T:System.HttpRequestActionEnum"/> Http请求行为枚举
            </summary>
        </member>
        <member name="F:System.HttpRequestActionEnum.None">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:System.HttpRequestActionEnum.Auth">
            <summary>
            鉴权
            </summary>
        </member>
        <member name="F:System.HttpRequestActionEnum.Paged">
            <summary>
            分页查询
            </summary>
        </member>
        <member name="F:System.HttpRequestActionEnum.Query">
            <summary>
            查询
            </summary>
        </member>
        <member name="F:System.HttpRequestActionEnum.Add">
            <summary>
            添加
            </summary>
        </member>
        <member name="F:System.HttpRequestActionEnum.BatchAdd">
            <summary>
            批量添加
            </summary>
        </member>
        <member name="F:System.HttpRequestActionEnum.Update">
            <summary>
            更新
            </summary>
        </member>
        <member name="F:System.HttpRequestActionEnum.BatchUpdate">
            <summary>
            批量更新
            </summary>
        </member>
        <member name="F:System.HttpRequestActionEnum.Delete">
            <summary>
            删除
            </summary>
        </member>
        <member name="F:System.HttpRequestActionEnum.BatchDelete">
            <summary>
            批量删除
            </summary>
        </member>
        <member name="F:System.HttpRequestActionEnum.Submit">
            <summary>
            提交
            </summary>
        </member>
        <member name="F:System.HttpRequestActionEnum.Download">
            <summary>
            下载
            </summary>
        </member>
        <member name="F:System.HttpRequestActionEnum.Upload">
            <summary>
            上传
            </summary>
        </member>
        <member name="F:System.HttpRequestActionEnum.Export">
            <summary>
            导出
            </summary>
        </member>
        <member name="F:System.HttpRequestActionEnum.Import">
            <summary>
            导入
            </summary>
        </member>
        <member name="F:System.HttpRequestActionEnum.Other">
            <summary>
            其他
            </summary>
        </member>
        <member name="T:System.HttpRequestMethodEnum">
            <summary>
            <see cref="T:System.HttpRequestMethodEnum"/> Http请求方式枚举
            </summary>
        </member>
        <member name="F:System.HttpRequestMethodEnum.Get">
            <summary>
            Get请求
            <remarks>用于从服务器获取资源。GET 请求将参数附加在 URL 后面，通过查询字符串传递给服务器。GET 请求是幂等的，即多次相同的 GET 请求应该返回相同的结果。</remarks>
            </summary>
        </member>
        <member name="F:System.HttpRequestMethodEnum.Post">
            <summary>
            Post请求
            <remarks>用于向服务器提交数据并处理。POST 请求将参数包含在请求体中发送给服务器。POST 请求不是幂等的，即多次相同的 POST 请求可能会导致不同的结果。</remarks>
            </summary>
        </member>
        <member name="F:System.HttpRequestMethodEnum.Put">
            <summary>
            Put请求
            <remarks>用于向服务器更新指定资源。PUT 请求将请求体中的数据保存到指定的 URL 上。</remarks>
            </summary>
        </member>
        <member name="F:System.HttpRequestMethodEnum.Delete">
            <summary>
            Delete请求
            <remarks>用于从服务器删除指定资源。DELETE 请求通过指定的 URL 删除服务器上的资源。</remarks>
            </summary>
        </member>
        <member name="F:System.HttpRequestMethodEnum.Patch">
            <summary>
            Patch请求
            <remarks>用于对服务器上的资源进行部分更新。PATCH 请求将请求体中的数据应用到指定的 URL 上，只更新部分字段。</remarks>
            </summary>
        </member>
        <member name="F:System.HttpRequestMethodEnum.Head">
            <summary>
            Head请求
            <remarks>与 GET 请求类似，只是服务器返回的响应中不包含实体内容，主要用于获取资源的元数据（例如，响应头信息）。</remarks>
            </summary>
        </member>
        <member name="F:System.HttpRequestMethodEnum.Options">
            <summary>
            Options请求
            <remarks>用于获取指定资源所支持的通信选项，也就是说，当客户端想知道服务器支持的请求方式、响应头等信息时，可以发送 OPTIONS 请求。</remarks>
            </summary>
        </member>
        <member name="F:System.HttpRequestMethodEnum.Connect">
            <summary>
            Connect请求
            <remarks>用于建立与目标资源的网络链接，通常用于 HTTPS 中的隧道ing，将流量转发给真正的 HTTPS 服务器。</remarks>
            </summary>
        </member>
        <member name="F:System.HttpRequestMethodEnum.Trace">
            <summary>
            Trace请求
            <remarks>用于追踪请求-响应的传输路径，主要用于故障诊断。</remarks>
            </summary>
        </member>
        <member name="T:Fast.NET.Core.DaySentenceInfo">
            <summary>
            <see cref="T:Fast.NET.Core.DaySentenceInfo"/> 每日一句信息
            </summary>
        </member>
        <member name="P:Fast.NET.Core.DaySentenceInfo.Picture2">
            <summary>
            图片2
            </summary>
        </member>
        <member name="P:Fast.NET.Core.DaySentenceInfo.Caption">
            <summary>
            说明
            </summary>
        </member>
        <member name="P:Fast.NET.Core.DaySentenceInfo.Note">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:Fast.NET.Core.DaySentenceInfo.Content">
            <summary>
            英文内容
            </summary>
        </member>
        <member name="P:Fast.NET.Core.DaySentenceInfo.ShareImg">
            <summary>
            分享图片
            </summary>
        </member>
        <member name="P:Fast.NET.Core.DaySentenceInfo.DateTime">
            <summary>
            时间
            </summary>
        </member>
        <member name="T:Fast.NET.Core.DiskInfo">
            <summary>
            <see cref="T:Fast.NET.Core.DiskInfo"/> 磁盘信息
            </summary>
        </member>
        <member name="P:Fast.NET.Core.DiskInfo.DiskName">
            <summary>
            磁盘名
            </summary>
        </member>
        <member name="P:Fast.NET.Core.DiskInfo.TypeName">
            <summary>
            类型名
            </summary>
        </member>
        <member name="P:Fast.NET.Core.DiskInfo.TotalFree">
            <summary>
            总剩余
            </summary>
        </member>
        <member name="P:Fast.NET.Core.DiskInfo.TotalSize">
            <summary>
            总量
            </summary>
        </member>
        <member name="P:Fast.NET.Core.DiskInfo.Used">
            <summary>
            已使用
            </summary>
        </member>
        <member name="P:Fast.NET.Core.DiskInfo.AvailableFreeSpace">
            <summary>
            可使用
            </summary>
        </member>
        <member name="P:Fast.NET.Core.DiskInfo.AvailablePercent">
            <summary>
            使用百分比
            </summary>
        </member>
        <member name="T:Fast.NET.Core.UserAgentInfo">
            <summary>
            <see cref="T:Fast.NET.Core.UserAgentInfo"/> 用户代理信息
            </summary>
        </member>
        <member name="P:Fast.NET.Core.UserAgentInfo.Device">
            <summary>
            设备
            </summary>
        </member>
        <member name="P:Fast.NET.Core.UserAgentInfo.OS">
            <summary>
            操作系统（版本）
            </summary>
        </member>
        <member name="P:Fast.NET.Core.UserAgentInfo.Browser">
            <summary>
            浏览器（版本）
            </summary>
        </member>
        <member name="T:Fast.NET.Core.WanNetIPInfo">
            <summary>
            <see cref="T:Fast.NET.Core.WanNetIPInfo"/> 公网IP信息
            </summary>
        </member>
        <member name="P:Fast.NET.Core.WanNetIPInfo.Ip">
            <summary>
            Ip地址
            </summary>
        </member>
        <member name="P:Fast.NET.Core.WanNetIPInfo.Province">
            <summary>
            省份
            </summary>
        </member>
        <member name="P:Fast.NET.Core.WanNetIPInfo.ProvinceZipCode">
            <summary>
            省份邮政编码
            </summary>
        </member>
        <member name="P:Fast.NET.Core.WanNetIPInfo.City">
            <summary>
            城市
            </summary>
        </member>
        <member name="P:Fast.NET.Core.WanNetIPInfo.CityZipCode">
            <summary>
            城市邮政编码
            </summary>
        </member>
        <member name="P:Fast.NET.Core.WanNetIPInfo.Address">
            <summary>
            地理信息
            </summary>
        </member>
        <member name="P:Fast.NET.Core.WanNetIPInfo.Operator">
            <summary>
            运营商
            </summary>
        </member>
        <member name="T:Fast.NET.Core.FastContext">
            <summary>
            <see cref="T:Fast.NET.Core.FastContext"/> App 上下文
            </summary>
        </member>
        <member name="P:Fast.NET.Core.FastContext.WebHostEnvironment">
            <summary>
            获取Web主机环境
            </summary>
        </member>
        <member name="P:Fast.NET.Core.FastContext.HostEnvironment">
            <summary>
            获取主机环境
            </summary>
        </member>
        <member name="P:Fast.NET.Core.FastContext.InternalServices">
            <summary>
            应用服务
            </summary>
        </member>
        <member name="P:Fast.NET.Core.FastContext.WebApplication">
            <summary>
            应用程序构建器
            </summary>
        </member>
        <member name="P:Fast.NET.Core.FastContext.RootServices">
            <summary>
            存储根服务，可能为空
            </summary>
        </member>
        <member name="P:Fast.NET.Core.FastContext.Configuration">
            <summary>
            配置
            </summary>
        </member>
        <member name="P:Fast.NET.Core.FastContext.HttpContext">
            <summary>
            请求上下文
            </summary>
        </member>
        <member name="M:Fast.NET.Core.FastContext.GetService``1(System.IServiceProvider)">
            <summary>
            获取请求生存周期的服务
            </summary>
            <typeparam name="TService"></typeparam>
            <param name="serviceProvider"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.FastContext.GetService(System.Type,System.IServiceProvider)">
            <summary>
            获取请求生存周期的服务
            </summary>
            <param name="type"></param>
            <param name="serviceProvider"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.FastContext.GetServices``1(System.IServiceProvider)">
            <summary>
            获取请求生存周期的服务集合
            </summary>
            <typeparam name="TService"></typeparam>
            <param name="serviceProvider"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.FastContext.GetServices(System.Type,System.IServiceProvider)">
            <summary>
            获取请求生存周期的服务集合
            </summary>
            <param name="type"></param>
            <param name="serviceProvider"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.FastContext.GetRequiredService``1(System.IServiceProvider)">
            <summary>
            获取请求生存周期的服务
            </summary>
            <typeparam name="TService"></typeparam>
            <param name="serviceProvider"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.FastContext.GetRequiredService(System.Type,System.IServiceProvider)">
            <summary>
            获取请求生存周期的服务
            </summary>
            <param name="type"></param>
            <param name="serviceProvider"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.FastContext.GetConfig``1(System.String)">
            <summary>
            获取配置
            </summary>
            <typeparam name="TOptions">强类型选项类</typeparam>
            <param name="path"><see cref="T:System.String"/> 配置中对应的Key</param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.FastContext.GetOptions``1">
            <summary>
            配置选项
            </summary>
            <typeparam name="TOptions">强类型选项类</typeparam>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.FastContext.GetServiceLifetime(System.Type)">
            <summary>
            获取服务注册的生命周期类型
            </summary>
            <param name="serviceType"></param>
            <returns></returns>
        </member>
        <member name="T:Fast.NET.Core.CorsAccessorExtension">
            <summary>
            <see cref="T:Fast.NET.Core.CorsAccessorExtension"/> 跨域处理 拓展类
            </summary>
        </member>
        <member name="F:Fast.NET.Core.CorsAccessorExtension._defaultExposedHeaders">
            <summary>
            默认跨域导出响应头 Key
            </summary>
            <remarks>解决 ajax，XMLHttpRequest，axios 不能获取请求头问题</remarks>
        </member>
        <member name="M:Fast.NET.Core.CorsAccessorExtension.SetCorsPolicy(Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder,Fast.NET.Core.CorsAccessorSettingsOptions,System.Boolean)">
            <summary>
            设置跨域策略
            </summary>
            <param name="builder"><see cref="T:Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder"/></param>
            <param name="corsAccessorSettings"><see cref="T:Fast.NET.Core.CorsAccessorSettingsOptions"/></param>
            <param name="isMiddleware"><see cref="T:System.Boolean"/></param>
        </member>
        <member name="M:Fast.NET.Core.CorsAccessorExtension.AddCorsAccessor(Microsoft.AspNetCore.Builder.WebApplicationBuilder)">
            <summary>
            添加跨域服务
            </summary>
            <param name="builder"><see cref="T:Microsoft.AspNetCore.Builder.WebApplicationBuilder"/></param>
            <returns><see cref="T:Microsoft.AspNetCore.Builder.WebApplicationBuilder"/></returns>
        </member>
        <member name="M:Fast.NET.Core.CorsAccessorExtension.AddCorsAccessor(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,System.String)">
            <summary>
            添加跨域服务
            </summary>
            <param name="services"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
            <param name="configuration"><see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></param>
            <param name="section"><see cref="T:System.String"/>
            <para>Json配置文件节点的Key</para>
            <remarks>默认值：CorsAccessorSettings</remarks>
            </param>
            <returns><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="M:Fast.NET.Core.CorsAccessorExtension.AddCorsAccessor(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Fast.NET.Core.CorsAccessorSettingsOptions})">
            <summary>
            添加跨域服务
            </summary>
            <param name="services"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
            <param name="optionAction"><see cref="T:System.Action`1"/></param>
            <returns><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="T:Fast.NET.Core.GzipCompressionExtension">
            <summary>
            <see cref="T:Fast.NET.Core.GzipCompressionExtension"/> Gzip压缩 拓展类
            </summary>
        </member>
        <member name="M:Fast.NET.Core.GzipCompressionExtension.AddGzipCompression(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            添加Gzip压缩
            </summary>
            <param name="services"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
            <returns><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="M:Fast.NET.Core.GzipCompressionExtension.UseGzipCompression(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            启用Gzip压缩
            </summary>
            <param name="app"><see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/></param>
            <returns><see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/></returns>
        </member>
        <member name="T:Fast.NET.Core.HttpContextExtension">
            <summary>
            <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/> 拓展类
            </summary>
        </member>
        <member name="M:Fast.NET.Core.HttpContextExtension.UnifyResponseTimestamp(Microsoft.AspNetCore.Http.HttpContext,System.Int64)">
            <summary>
            设置规范化响应时间戳
            </summary>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <param name="timestamp"><see cref="T:System.Int64"/></param>
            <returns><see cref="T:System.String"/></returns>
        </member>
        <member name="M:Fast.NET.Core.HttpContextExtension.UnifyResponseTimestamp(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            获取规范化响应时间戳
            </summary>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <returns><see cref="T:System.String"/></returns>
        </member>
        <member name="M:Fast.NET.Core.HttpContextExtension.IsWebSocketRequest(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            判断是否是 WebSocket 请求
            </summary>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="M:Fast.NET.Core.HttpContextExtension.GetMetadata``1(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            获取 Action 特性
            </summary>
            <typeparam name="TAttribute"></typeparam>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.HttpContextExtension.GetMetadata(Microsoft.AspNetCore.Http.EndpointMetadataCollection,System.Type)">
            <summary>
            获取 Action 特性
            </summary>
            <param name="metadata"><see cref="T:Microsoft.AspNetCore.Http.EndpointMetadataCollection"/></param>
            <param name="attributeType"><see cref="T:System.Type"/></param>
            <returns><see cref="T:System.Object"/></returns>
        </member>
        <member name="M:Fast.NET.Core.HttpContextExtension.GetMetadata(Microsoft.AspNetCore.Http.HttpContext,System.Type)">
            <summary>
            获取 Action 特性
            </summary>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <param name="attributeType"><see cref="T:System.Type"/></param>
            <returns><see cref="T:System.Object"/></returns>
        </member>
        <member name="M:Fast.NET.Core.HttpContextExtension.SignInToSwagger(Microsoft.AspNetCore.Http.HttpContext,System.String)">
            <summary>
            设置规范化文档自动登录
            </summary>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <param name="accessToken"></param>
        </member>
        <member name="M:Fast.NET.Core.HttpContextExtension.SignOutToSwagger(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            设置规范化文档退出登录
            </summary>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
        </member>
        <member name="M:Fast.NET.Core.HttpContextExtension.LanIpv4(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            局域网 IPv4 地址
            </summary>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <returns><see cref="T:System.String"/></returns>
        </member>
        <member name="M:Fast.NET.Core.HttpContextExtension.LanIpv6(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            局域网 IPv6 地址
            </summary>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <returns><see cref="T:System.String"/></returns>
        </member>
        <member name="M:Fast.NET.Core.HttpContextExtension.LocalIpv4(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            本机 IPv4 地址
            </summary>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <returns><see cref="T:System.String"/></returns>
        </member>
        <member name="M:Fast.NET.Core.HttpContextExtension.LocalIpv6(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            本机 IPv6 地址
            </summary>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <returns><see cref="T:System.String"/></returns>
        </member>
        <member name="M:Fast.NET.Core.HttpContextExtension.RemoteIpv4(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            远程 Ipv4 地址
            </summary>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <returns><see cref="T:System.String"/></returns>
        </member>
        <member name="M:Fast.NET.Core.HttpContextExtension.RemoteIpv6(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            远程 Ipv6 地址
            </summary>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <returns><see cref="T:System.String"/></returns>
        </member>
        <member name="M:Fast.NET.Core.HttpContextExtension.RequestUserAgent(Microsoft.AspNetCore.Http.HttpContext,System.String)">
            <summary>
            请求用户代理字符串（User-Agent）
            </summary>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <param name="userAgentHeaderKey">默认从 “User-Agent” 获取</param>
            <returns><see cref="T:System.String"/></returns>
        </member>
        <member name="M:Fast.NET.Core.HttpContextExtension.RequestUserAgentInfo(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            请求用户代理信息（User-Agent）
            </summary>
            <remarks>注：如果需要正常解析，需要引用 "UAParser" 程序集，否则会返回 null</remarks>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <returns><see cref="T:Fast.NET.Core.UserAgentInfo"/></returns>
        </member>
        <member name="M:Fast.NET.Core.HttpContextExtension.RemoteIpv4Info(Microsoft.AspNetCore.Http.HttpContext,System.String)">
            <summary>
            远程 Ipv4 地址信息
            </summary>
            <remarks>自带内存缓存，缓存过期时间为24小时（注：需要注入内存缓存，如不注入，则默认不走缓存）</remarks>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <param name="ip"><see cref="T:System.String"/> 要的IP地址信息，默认为 null，如果为 null，默认获取当前远程的 Ipv4 地址</param>
            <returns><see cref="T:Fast.NET.Core.WanNetIPInfo"/></returns>
        </member>
        <member name="M:Fast.NET.Core.HttpContextExtension.RemoteIpv4InfoAsync(Microsoft.AspNetCore.Http.HttpContext,System.String)">
            <summary>
            远程 Ipv4 地址信息
            </summary>
            <remarks>自带内存缓存，缓存过期时间为24小时（注：需要注入内存缓存，如不注入，则默认不走缓存）</remarks>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <param name="ip"><see cref="T:System.String"/> 要的IP地址信息，默认为 null，如果为 null，默认获取当前远程的 Ipv4 地址</param>
            <returns><see cref="T:Fast.NET.Core.WanNetIPInfo"/></returns>
        </member>
        <member name="M:Fast.NET.Core.HttpContextExtension.GetControllerActionDescriptor(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            获取 控制器/Action 描述器
            </summary>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <returns><see cref="T:Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor"/></returns>
        </member>
        <member name="M:Fast.NET.Core.HttpContextExtension.ReadBodyContentAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            读取 Body 内容
            </summary>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <remarks>需先在 Startup 的 Configure 中注册 app.EnableBuffering()</remarks>
            <returns><see cref="T:System.String"/></returns>
        </member>
        <member name="M:Fast.NET.Core.HttpContextExtension.ReadBodyContentAsync(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            读取 Body 内容
            </summary>
            <param name="httpRequest"><see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/></param>
            <remarks>需先在 Startup 的 Configure 中注册 app.EnableBuffering()</remarks>
            <returns><see cref="T:System.String"/></returns>
        </member>
        <member name="M:Fast.NET.Core.HttpContextExtension.RequestUrlAddress(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            完整请求地址
            </summary>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <returns><see cref="T:System.String"/></returns>
        </member>
        <member name="M:Fast.NET.Core.HttpContextExtension.RequestUrlAddress(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            完整请求地址
            </summary>
            <param name="httpRequest"><see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/></param>
            <returns><see cref="T:System.String"/></returns>
        </member>
        <member name="M:Fast.NET.Core.HttpContextExtension.RefererUrlAddress(Microsoft.AspNetCore.Http.HttpContext,System.String)">
            <summary>
            来源地址
            </summary>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <param name="refererHeaderKey">默认从 “Referer” 获取</param>
            <returns><see cref="T:System.String"/></returns>
        </member>
        <member name="M:Fast.NET.Core.HttpContextExtension.SetResponseStatusCodes(Microsoft.AspNetCore.Http.HttpContext,System.Int32,System.Int32[],System.Int32[][])">
            <summary>
            设置响应状态码
            </summary>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <param name="statusCode"><see cref="T:System.Int32"/></param>
            <param name="return200StatusCodes"><see cref="T:System.Array"/> 设置返回 200 状态码列表。只支持 400+(404除外) 状态码</param>
            <param name="adaptStatusCodes"><see cref="T:System.Array"/> 适配（篡改）状态码。只支持 400+(404除外) 状态码</param>
            <remarks>
            示例：
                return200StatusCodes = [401, 403]
                adaptStatusCodes = [[401, 200], [403, 200]]
            </remarks>
        </member>
        <member name="M:Fast.NET.Core.HttpContextExtension.GetRequestMethod(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            获取请求方式
            </summary>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <returns></returns>
        </member>
        <member name="T:Fast.NET.Core.IApplicationBuilderExtension">
            <summary>
            <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/> 拓展类
            </summary>
        </member>
        <member name="M:Fast.NET.Core.IApplicationBuilderExtension.EnableBuffering(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            启用 Body 重复读功能
            </summary>
            <remarks>须在 app.UseRouting() 之前注册</remarks>
            <param name="app"><see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/></param>
            <returns><see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/></returns>
        </member>
        <member name="T:Fast.NET.Core.IConfigurationExtension">
            <summary>
            <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/> 拓展类
            </summary>
        </member>
        <member name="M:Fast.NET.Core.IConfigurationExtension.Reload(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            刷新配置对象
            </summary>
            <param name="configuration"><see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></param>
            <returns><see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></returns>
        </member>
        <member name="T:Fast.NET.Core.WebApplicationBuilderExtension">
            <summary>
            <see cref="T:Microsoft.AspNetCore.Builder.WebApplicationBuilder"/> 拓展类
            </summary>
        </member>
        <member name="M:Fast.NET.Core.WebApplicationBuilderExtension.Initialize(Microsoft.AspNetCore.Builder.WebApplicationBuilder)">
            <summary>
            框架初始化
            </summary>
            <param name="builder"><see cref="T:Microsoft.AspNetCore.Builder.WebApplicationBuilder"/></param>
            <returns><see cref="T:Microsoft.AspNetCore.Builder.WebApplicationBuilder"/></returns>
        </member>
        <member name="M:Fast.NET.Core.WebApplicationBuilderExtension.ConfigureApplication(Microsoft.AspNetCore.Hosting.IWebHostBuilder,Microsoft.Extensions.Hosting.IHostBuilder)">
            <summary>
            配置 Application
            </summary>
            <param name="builder"></param>
            <param name="hostBuilder"></param>
        </member>
        <member name="P:Fast.NET.Core.WebApplicationBuilderExtension.InternalConfigurationScanDirectories">
            <summary>
            默认配置文件扫描目录
            </summary>
        </member>
        <member name="F:Fast.NET.Core.WebApplicationBuilderExtension.excludeJsonPrefixArr">
            <summary>
            排除的配置文件前缀
            </summary>
        </member>
        <member name="F:Fast.NET.Core.WebApplicationBuilderExtension.runtimeJsonSuffixArr">
            <summary>
            排除运行时 Json 后缀
            </summary>
        </member>
        <member name="M:Fast.NET.Core.WebApplicationBuilderExtension.AddJsonFiles(Microsoft.Extensions.Configuration.IConfigurationBuilder,Microsoft.Extensions.Hosting.IHostEnvironment)">
            <summary>
            添加 JSON 文件
            </summary>
            <param name="configurationBuilder"></param>
            <param name="hostEnvironment"></param>
        </member>
        <member name="M:Fast.NET.Core.WebApplicationBuilderExtension.SplitConfigFileNameToGroups(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            对配置文件名进行分组
            </summary>
            <param name="configFiles"></param>
            <returns></returns>
        </member>
        <member name="T:Fast.NET.Core.CoreStartupFilter">
            <summary>
            <see cref="T:Fast.NET.Core.CoreStartupFilter"/> 应用启动时自动注册中间件
            </summary>
        </member>
        <member name="M:Fast.NET.Core.CoreStartupFilter.Configure(System.Action{Microsoft.AspNetCore.Builder.IApplicationBuilder})">
            <summary>
            配置中间件
            </summary>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="T:Fast.NET.Core.CorsAccessorStartupFilter">
            <summary>
            <see cref="T:Fast.NET.Core.CorsAccessorStartupFilter"/> 应用启动时自动注册中间件
            </summary>
        </member>
        <member name="M:Fast.NET.Core.CorsAccessorStartupFilter.Configure(System.Action{Microsoft.AspNetCore.Builder.IApplicationBuilder})">
            <summary>
            配置中间件
            </summary>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="T:Fast.NET.Core.CorsAccessorSettingsOptions">
            <summary>
            <see cref="T:Fast.NET.Core.CorsAccessorSettingsOptions"/> 跨域配置选项
            </summary>
        </member>
        <member name="P:Fast.NET.Core.CorsAccessorSettingsOptions.PolicyName">
            <summary>
            策略名称
            </summary>
        </member>
        <member name="P:Fast.NET.Core.CorsAccessorSettingsOptions.WithOrigins">
            <summary>
            允许来源域名，没有配置则允许所有来源
            </summary>
        </member>
        <member name="P:Fast.NET.Core.CorsAccessorSettingsOptions.WithHeaders">
            <summary>
            请求表头，没有配置则允许所有表头
            </summary>
        </member>
        <member name="P:Fast.NET.Core.CorsAccessorSettingsOptions.WithExposedHeaders">
            <summary>
            设置客户端可获取的响应标头
            </summary>
        </member>
        <member name="P:Fast.NET.Core.CorsAccessorSettingsOptions.WithMethods">
            <summary>
            设置跨域允许请求谓词，没有配置则允许所有
            </summary>
        </member>
        <member name="P:Fast.NET.Core.CorsAccessorSettingsOptions.AllowCredentials">
            <summary>
            是否允许跨域请求中的凭据
            </summary>
        </member>
        <member name="P:Fast.NET.Core.CorsAccessorSettingsOptions.SetPreflightMaxAge">
            <summary>
            设置预检过期时间
            </summary>
        </member>
        <member name="P:Fast.NET.Core.CorsAccessorSettingsOptions.FixedClientToken">
            <summary>
            修正前端无法获取 Token 问题
            </summary>
        </member>
        <member name="P:Fast.NET.Core.CorsAccessorSettingsOptions.SignalRSupport">
            <summary>
            启用 SignalR 跨域支持
            </summary>
        </member>
        <member name="M:Fast.NET.Core.CorsAccessorSettingsOptions.PostConfigure">
            <summary>
            后期配置
            </summary>
        </member>
        <member name="T:Fast.NET.Core.AssemblyUtil">
            <summary>
            <see cref="T:System.Reflection.Assembly"/> 工具类
            </summary>
        </member>
        <member name="M:Fast.NET.Core.AssemblyUtil.GetAssembly(System.String)">
            <summary>
            根据程序集名称获取运行时程序集
            </summary>
            <param name="assemblyName"><see cref="T:System.String"/> 程序集名称</param>
            <returns><see cref="T:System.Reflection.Assembly"/></returns>
        </member>
        <member name="M:Fast.NET.Core.AssemblyUtil.LoadAssembly(System.String)">
            <summary>
            根据路径加载程序集
            </summary>
            <param name="path"><see cref="T:System.String"/> 绝对路径</param>
            <returns><see cref="T:System.Reflection.Assembly"/></returns>
        </member>
        <member name="M:Fast.NET.Core.AssemblyUtil.LoadAssembly(System.IO.MemoryStream)">
            <summary>
            通过流加载程序集
            </summary>
            <param name="assembly"><see cref="T:System.IO.MemoryStream"/> 内存流</param>
            <returns><see cref="T:System.Reflection.Assembly"/></returns>
        </member>
        <member name="M:Fast.NET.Core.AssemblyUtil.GetType(System.String,System.String)">
            <summary>
            根据程序集名称、类型完整限定名获取运行时类型
            </summary>
            <param name="assemblyName"><see cref="T:System.String"/> 程序集名称</param>
            <param name="typeFullName"><see cref="T:System.String"/> 类型完整限定名称</param>
            <returns><see cref="T:System.Type"/></returns>
        </member>
        <member name="M:Fast.NET.Core.AssemblyUtil.GetType(System.IO.MemoryStream,System.String)">
            <summary>
            根据程序集和类型完全限定名获取运行时类型
            </summary>
            <param name="assembly"><see cref="T:System.IO.MemoryStream"/> 内存流</param>
            <param name="typeFullName"><see cref="T:System.String"/> 类型完整限定名称</param>
            <returns><see cref="T:System.Type"/></returns>
        </member>
        <member name="T:Fast.NET.Core.JsonUtils">
            <summary>
            <see cref="T:Fast.NET.Core.JsonUtils"/> Json 工具类
            </summary>
        </member>
        <member name="M:Fast.NET.Core.JsonUtils.ReadJsonFile(System.String)">
            <summary>
            读取 Json 文件
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.JsonUtils.ParseJson(System.String)">
            <summary>
            解析 Json 字符串
            </summary>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.JsonUtils.VisitJsonElement(System.Text.Json.JsonElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            处理
            </summary>
            <param name="root"></param>
            <param name="dictionary"></param>
            <param name="currentPath"></param>
        </member>
        <member name="T:Fast.NET.Core.MachineUtil">
            <summary>
            <see cref="T:Fast.NET.Core.MachineUtil"/> 系统机器工具类
            </summary>
        </member>
        <member name="M:Fast.NET.Core.MachineUtil.IsUnix">
            <summary>
            是否为 Unix/Linux 操作系统
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.MachineUtil.IsMacOS">
            <summary>
            是否为 MacOS 操作系统
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.MachineUtil.GetOSDescription">
            <summary>
            获取操作系统版本
            <para>Linux获取发行版本</para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.MachineUtil.GetSystemStartTime">
            <summary>
            获取系统启动时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.MachineUtil.GetSystemRunTimes(System.String)">
            <summary>
            获取系统运行时间描述
            </summary>
            <param name="format"><see cref="T:System.String"/> 输出格式化，默认：“00 天 00 时 00 分 00 秒”</param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.MachineUtil.GetProgramStartTime">
            <summary>
            获取当前进程启动时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.MachineUtil.GetProgramRunTimes(System.String)">
            <summary>
            获取当前进程运行时间描述
            </summary>
            <param name="format"><see cref="T:System.String"/> 输出格式化，默认：“00 天 00 时 00 分 00 秒”</param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.MachineUtil.GetSystemCpuRate">
            <summary>
            获取操作系统 CPU 使用率
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.MachineUtil.GetProgramCpuUsage(System.Int32)">
            <summary>
            获取当前进程 CPU 使用率
            <para>注：这里存在线程等待</para>
            </summary>
            <param name="sleep"><see cref="T:System.Int32"/> 线程等待时间，单位毫秒。建议不要超过3秒，0.5秒 1秒为性能最优</param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.MachineUtil.GetSystemRamInfo">
            <summary>
            获取操作系统内存信息，单位(MB)
            </summary>
            <returns>
            <para>total：总内存</para>
            <para>used：已用内存</para>
            <para>free：可用内存</para>
            </returns>
        </member>
        <member name="M:Fast.NET.Core.MachineUtil.GetProgramMemoryInfo">
            <summary>
            获取当前进程内存信息，单位(MB)
            </summary>
            <returns>
            <para>working：RAM 物理内存</para>
            <para>peakWorking：最大 RAM 物理内存</para>
            <para>virtualMemory：虚拟内存</para>
            <para>peakVirtualMemory：最大虚拟内存</para>
            <para>pagedMemory：分页内存</para>
            <para>peakPagedMemory：最大分页内存</para>
            </returns>
        </member>
        <member name="M:Fast.NET.Core.MachineUtil.GetDiskInfos">
            <summary>
            获取硬盘信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.MachineUtil.GetServerIp">
            <summary>
            获取服务器IP地址
            </summary>
            <returns></returns>
        </member>
        <member name="T:Fast.NET.Core.RemoteRequestUtil">
            <summary>
            <see cref="T:System.Net.Http.HttpClient"/> 远程请求工具类
            </summary>
        </member>
        <member name="F:Fast.NET.Core.RemoteRequestUtil._defaultJsonSerializerOptions">
            <summary>
            默认 System.Text.Json 序列化配置
            </summary>
        </member>
        <member name="M:Fast.NET.Core.RemoteRequestUtil.GetDaySentence">
            <summary>
            得到每日一句
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.RemoteRequestUtil.Get``1(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32})">
            <summary>
            Http Get 请求
            </summary>
            <typeparam name="T"></typeparam>
            <param name="url"><see cref="T:System.String"/> 请求的Url</param>
            <param name="param"><see cref="T:System.Object"/> Url拼接的参数</param>
            <param name="headers"><see cref="T:System.Collections.Generic.IDictionary`2"/> 请求头部信息</param>
            <param name="timeout"><see cref="T:System.Int32"/> 请求超时时间，默认60秒，null则不超时</param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.RemoteRequestUtil.GetAsync``1(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32})">
            <summary>
            Http Get 请求
            </summary>
            <typeparam name="T"></typeparam>
            <param name="url"><see cref="T:System.String"/> 请求的Url</param>
            <param name="param"><see cref="T:System.Object"/> Url拼接的参数</param>
            <param name="headers"><see cref="T:System.Collections.Generic.IDictionary`2"/> 请求头部信息</param>
            <param name="timeout"><see cref="T:System.Int32"/> 请求超时时间，默认60秒，null则不超时</param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.RemoteRequestUtil.Get(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32})">
            <summary>
            Http Get 请求
            </summary>
            <param name="url"><see cref="T:System.String"/> 请求的Url</param>
            <param name="param"><see cref="T:System.Object"/> Url拼接的参数</param>
            <param name="headers"><see cref="T:System.Collections.Generic.IDictionary`2"/> 请求头部信息</param>
            <param name="timeout"><see cref="T:System.Int32"/> 请求超时时间，默认60秒，null则不超时</param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.RemoteRequestUtil.GetAsync(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32})">
            <summary>
            Http Get 请求
            </summary>
            <param name="url"><see cref="T:System.String"/> 请求的Url</param>
            <param name="param"><see cref="T:System.Object"/> Url拼接的参数</param>
            <param name="headers"><see cref="T:System.Collections.Generic.IDictionary`2"/> 请求头部信息</param>
            <param name="timeout"><see cref="T:System.Int32"/> 请求超时时间，默认60秒，null则不超时</param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.RemoteRequestUtil.Post``1(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32})">
            <summary>
            Http Post 请求
            </summary>
            <typeparam name="T"></typeparam>
            <param name="url"><see cref="T:System.String"/> 请求的Url</param>
            <param name="data"><see cref="T:System.Object"/> 写入请求Body中的参数</param>
            <param name="headers"><see cref="T:System.Collections.Generic.IDictionary`2"/> 请求头部信息</param>
            <param name="timeout"><see cref="T:System.Int32"/> 请求超时时间，默认60秒，null则不超时</param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.RemoteRequestUtil.PostAsync``1(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32})">
            <summary>
            Http Post 请求
            </summary>
            <typeparam name="T"></typeparam>
            <param name="url"><see cref="T:System.String"/> 请求的Url</param>
            <param name="data"><see cref="T:System.Object"/> 写入请求Body中的参数</param>
            <param name="headers"><see cref="T:System.Collections.Generic.IDictionary`2"/> 请求头部信息</param>
            <param name="timeout"><see cref="T:System.Int32"/> 请求超时时间，默认60秒，null则不超时</param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.RemoteRequestUtil.Post(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32})">
            <summary>
            Http Post 请求
            </summary>
            <param name="url"><see cref="T:System.String"/> 请求的Url</param>
            <param name="data"><see cref="T:System.Object"/> 写入请求Body中的参数</param>
            <param name="headers"><see cref="T:System.Collections.Generic.IDictionary`2"/> 请求头部信息</param>
            <param name="timeout"><see cref="T:System.Int32"/> 请求超时时间，默认60秒，null则不超时</param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.RemoteRequestUtil.PostAsync(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32})">
            <summary>
            Http Post 请求
            </summary>
            <param name="url"><see cref="T:System.String"/> 请求的Url</param>
            <param name="data"><see cref="T:System.Object"/> 写入请求Body中的参数</param>
            <param name="headers"><see cref="T:System.Collections.Generic.IDictionary`2"/> 请求头部信息</param>
            <param name="timeout"><see cref="T:System.Int32"/> 请求超时时间，默认60秒，null则不超时</param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.RemoteRequestUtil.Put``1(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32})">
            <summary>
            Http Put 请求
            </summary>
            <typeparam name="T"></typeparam>
            <param name="url"><see cref="T:System.String"/> 请求的Url</param>
            <param name="data"><see cref="T:System.Object"/> 写入请求Body中的参数</param>
            <param name="headers"><see cref="T:System.Collections.Generic.IDictionary`2"/> 请求头部信息</param>
            <param name="timeout"><see cref="T:System.Int32"/> 请求超时时间，默认60秒，null则不超时</param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.RemoteRequestUtil.PutAsync``1(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32})">
            <summary>
            Http Put 请求
            </summary>
            <typeparam name="T"></typeparam>
            <param name="url"><see cref="T:System.String"/> 请求的Url</param>
            <param name="data"><see cref="T:System.Object"/> 写入请求Body中的参数</param>
            <param name="headers"><see cref="T:System.Collections.Generic.IDictionary`2"/> 请求头部信息</param>
            <param name="timeout"><see cref="T:System.Int32"/> 请求超时时间，默认60秒，null则不超时</param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.RemoteRequestUtil.Put(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32})">
            <summary>
            Http Put 请求
            </summary>
            <param name="url"><see cref="T:System.String"/> 请求的Url</param>
            <param name="data"><see cref="T:System.Object"/> 写入请求Body中的参数</param>
            <param name="headers"><see cref="T:System.Collections.Generic.IDictionary`2"/> 请求头部信息</param>
            <param name="timeout"><see cref="T:System.Int32"/> 请求超时时间，默认60秒，null则不超时</param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.RemoteRequestUtil.PutAsync(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32})">
            <summary>
            Http Put 请求
            </summary>
            <param name="url"><see cref="T:System.String"/> 请求的Url</param>
            <param name="data"><see cref="T:System.Object"/> 写入请求Body中的参数</param>
            <param name="headers"><see cref="T:System.Collections.Generic.IDictionary`2"/> 请求头部信息</param>
            <param name="timeout"><see cref="T:System.Int32"/> 请求超时时间，默认60秒，null则不超时</param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.RemoteRequestUtil.Delete``1(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32})">
            <summary>
            Http Delete 请求
            </summary>
            <typeparam name="T"></typeparam>
            <param name="url"><see cref="T:System.String"/> 请求的Url</param>
            <param name="headers"><see cref="T:System.Collections.Generic.IDictionary`2"/> 请求头部信息</param>
            <param name="timeout"><see cref="T:System.Int32"/> 请求超时时间，默认60秒，null则不超时</param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.RemoteRequestUtil.DeleteAsync``1(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32})">
            <summary>
            Http Delete 请求
            </summary>
            <typeparam name="T"></typeparam>
            <param name="url"><see cref="T:System.String"/> 请求的Url</param>
            <param name="headers"><see cref="T:System.Collections.Generic.IDictionary`2"/> 请求头部信息</param>
            <param name="timeout"><see cref="T:System.Int32"/> 请求超时时间，默认60秒，null则不超时</param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.RemoteRequestUtil.Delete(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32})">
            <summary>
            Http Delete 请求
            </summary>
            <param name="url"><see cref="T:System.String"/> 请求的Url</param>
            <param name="headers"><see cref="T:System.Collections.Generic.IDictionary`2"/> 请求头部信息</param>
            <param name="timeout"><see cref="T:System.Int32"/> 请求超时时间，默认60秒，null则不超时</param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.RemoteRequestUtil.DeleteAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32})">
            <summary>
            Http Delete 请求
            </summary>
            <param name="url"><see cref="T:System.String"/> 请求的Url</param>
            <param name="headers"><see cref="T:System.Collections.Generic.IDictionary`2"/> 请求头部信息</param>
            <param name="timeout"><see cref="T:System.Int32"/> 请求超时时间，默认60秒，null则不超时</param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.RemoteRequestUtil.SendAsync``1(System.Net.Http.HttpMethod,System.String,System.Object,System.Object,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32})">
            <summary>
            发送请求
            </summary>
            <typeparam name="T"></typeparam>
            <param name="httpMethod"><see cref="T:System.Net.Http.HttpMethod"/> 请求方式</param>
            <param name="url"><see cref="T:System.String"/> 请求的Url</param>
            <param name="urlParam"><see cref="T:System.Object"/> Url拼接的参数</param>
            <param name="bodyData"><see cref="T:System.Object"/> 写入请求Body中的参数</param>
            <param name="headers"><see cref="T:System.Collections.Generic.IDictionary`2"/> 请求头部信息</param>
            <param name="timeout"><see cref="T:System.Int32"/> 请求超时时间，默认60秒，null则不超时</param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.RemoteRequestUtil.SendAsync(System.Net.Http.HttpMethod,System.String,System.Object,System.Object,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32})">
            <summary>
            发送请求
            </summary>
            <param name="httpMethod"><see cref="T:System.Net.Http.HttpMethod"/> 请求方式</param>
            <param name="url"><see cref="T:System.String"/> 请求的Url</param>
            <param name="urlParam"><see cref="T:System.Object"/> Url拼接的参数</param>
            <param name="bodyData"><see cref="T:System.Object"/> 写入请求Body中的参数</param>
            <param name="headers"><see cref="T:System.Collections.Generic.IDictionary`2"/> 请求头部信息</param>
            <param name="timeout"><see cref="T:System.Int32"/> 请求超时时间，默认60秒，null则不超时</param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.RemoteRequestUtil.UrlEncode(System.String)">
            <summary>
            将一个字符串 URL 编码
            <para>如果已经 URL 编码则不会继续编码</para>
            </summary>
            <param name="str"><see cref="T:System.String"/></param>
            <returns><see cref="T:System.String"/></returns>
        </member>
        <member name="M:Fast.NET.Core.RemoteRequestUtil.ToDictionary(System.Object,System.Boolean)">
            <summary>
            将一个Object对象转为 字典
            </summary>
            <param name="obj"><see cref="T:System.Object"/></param>
            <param name="includeNull"><see cref="T:System.Boolean"/> 包括 null 值的属性</param>
            <returns><see cref="T:System.Collections.Generic.IDictionary`2"/></returns>
        </member>
        <member name="M:Fast.NET.Core.RemoteRequestUtil.GetCharsetEncoding(System.Net.Http.HttpResponseMessage)">
            <summary>
            获取响应报文 charset 编码
            </summary>
            <param name="response"></param>
            <returns></returns>
        </member>
        <member name="T:Fast.NET.Core.ShellUtil">
            <summary>
            <see cref="T:Fast.NET.Core.ShellUtil"/> 系统Shell工具类
            </summary>
        </member>
        <member name="M:Fast.NET.Core.ShellUtil.Bash(System.String,System.Int32)">
            <summary>
            Linux Bash 命令
            </summary>
            <param name="command"><see cref="T:System.String"/> 执行的命令</param>
            <param name="timeout"><see cref="T:System.Int32"/> 执行名称超时时间，单位毫秒</param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.ShellUtil.Cmd(System.String,System.String,System.Int32)">
            <summary>
            Windows Cmd 命令
            </summary>
            <param name="command"><see cref="T:System.String"/> 执行的命令</param>
            <param name="args"><see cref="T:System.String"/> 执行的命令参数</param>
            <param name="timeout"><see cref="T:System.Int32"/> 执行名称超时时间，单位毫秒</param>
            <returns></returns>
        </member>
    </members>
</doc>
