<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Fast.JwtBearer</name>
    </assembly>
    <members>
        <member name="T:Fast.JwtBearer.AllowForbiddenAttribute">
            <summary>
            <see cref="T:Fast.JwtBearer.AllowForbiddenAttribute"/> 允许无权限访问(403)
            </summary>
        </member>
        <member name="M:Fast.JwtBearer.AllowForbiddenAttribute.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Fast.JwtBearer.JwtBearerAlgorithmEnum">
            <summary>
            <see cref="T:Fast.JwtBearer.JwtBearerAlgorithmEnum"/> JwtBearer 加密算法
            </summary>
        </member>
        <member name="F:Fast.JwtBearer.JwtBearerAlgorithmEnum.HS256">
            <summary>
            HS256
            <para>默认的</para>
            </summary>
        </member>
        <member name="F:Fast.JwtBearer.JwtBearerAlgorithmEnum.HS384">
            <summary>
            HS384
            </summary>
        </member>
        <member name="F:Fast.JwtBearer.JwtBearerAlgorithmEnum.HS512">
            <summary>
            HS512
            </summary>
        </member>
        <member name="F:Fast.JwtBearer.JwtBearerAlgorithmEnum.PS256">
            <summary>
            PS256
            </summary>
        </member>
        <member name="F:Fast.JwtBearer.JwtBearerAlgorithmEnum.PS384">
            <summary>
            PS384
            </summary>
        </member>
        <member name="F:Fast.JwtBearer.JwtBearerAlgorithmEnum.PS512">
            <summary>
            PS512
            </summary>
        </member>
        <member name="F:Fast.JwtBearer.JwtBearerAlgorithmEnum.ES256">
            <summary>
            ES256
            </summary>
        </member>
        <member name="F:Fast.JwtBearer.JwtBearerAlgorithmEnum.ES256K">
            <summary>
            ES256K
            </summary>
        </member>
        <member name="F:Fast.JwtBearer.JwtBearerAlgorithmEnum.ES384">
            <summary>
            ES384
            </summary>
        </member>
        <member name="F:Fast.JwtBearer.JwtBearerAlgorithmEnum.ES512">
            <summary>
            ES512
            </summary>
        </member>
        <member name="F:Fast.JwtBearer.JwtBearerAlgorithmEnum.EdDSA">
            <summary>
            EdDSA
            </summary>
        </member>
        <member name="T:Fast.JwtBearer.IServiceCollectionExtension">
            <summary>
            <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> 动态Api 拓展类
            </summary>
        </member>
        <member name="M:Fast.JwtBearer.IServiceCollectionExtension.AddJwtBearerSetting(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,System.String)">
            <summary>
            添加JwtBearer设置
            </summary>
            <remarks>适用于只使用工具类</remarks>
            <param name="services"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
            <param name="configuration"><see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></param>
            <param name="section"><see cref="T:System.String"/>
            <para>Json配置文件节点的Key</para>
            <remarks>默认值：JWTSettings</remarks>
            </param>
            <returns><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="M:Fast.JwtBearer.IServiceCollectionExtension.AddJwtBearerSetting(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Fast.JwtBearer.JWTSettingsOptions})">
            <summary>
            添加JwtBearer设置
            <remarks>适用于只使用工具类</remarks>
            </summary>
            <param name="services"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
            <param name="optionAction"><see cref="T:System.Action`1"/></param>
            <returns><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="M:Fast.JwtBearer.IServiceCollectionExtension.AddJwtBearerAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,System.String)">
            <summary>
            添加JwtBearer授权
            </summary>
            <remarks>适用于自定义验证</remarks>
            <param name="services"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
            <param name="configuration"><see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></param>
            <param name="section"><see cref="T:System.String"/>
            <para>Json配置文件节点的Key</para>
            <remarks>默认值：JWTSettings</remarks>
            </param>
            <returns><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="M:Fast.JwtBearer.IServiceCollectionExtension.AddJwtBearerAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Fast.JwtBearer.JWTSettingsOptions})">
            <summary>
            添加JwtBearer授权
            </summary>
            <remarks>适用于自定义验证</remarks>
            <param name="services"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
            <param name="optionAction"><see cref="T:System.Action`1"/></param>
            <returns><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="M:Fast.JwtBearer.IServiceCollectionExtension.AddJwtBearer(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,System.String)">
            <summary>
            添加JwtBearer服务
            </summary>
            <param name="services"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
            <param name="configuration"><see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></param>
            <param name="section"><see cref="T:System.String"/>
            <para>Json配置文件节点的Key</para>
            <remarks>默认值：JWTSettings</remarks>
            </param>
            <returns><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="M:Fast.JwtBearer.IServiceCollectionExtension.AddJwtBearer(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Fast.JwtBearer.JWTSettingsOptions})">
            <summary>
            添加JwtBearer服务
            </summary>
            <param name="services"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
            <param name="optionAction"><see cref="T:System.Action`1"/></param>
            <returns><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="T:Fast.JwtBearer.AppAuthorizationHandler">
            <summary>
            授权策略执行程序
            </summary>
        </member>
        <member name="M:Fast.JwtBearer.AppAuthorizationHandler.HandleAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)">
            <summary>Makes a decision if authorization is allowed.</summary>
            <param name="context">The authorization information.</param>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="T:Fast.JwtBearer.IJwtBearerHandle">
            <summary>
            <see cref="T:Fast.JwtBearer.IJwtBearerHandle"/> Jwt验证提供器
            </summary>
        </member>
        <member name="M:Fast.JwtBearer.IJwtBearerHandle.AuthorizeHandle(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            授权处理
            <remarks>这里已经判断了 Token 是否有效，并且已经处理了自动刷新 Token。只需要处理其余的逻辑即可。如果返回 false或抛出异常，搭配 AuthorizeFailHandle 则抛出 HttpStatusCode = 401 状态码，否则走默认处理 AuthorizationHandlerContext.Fail() 会返回 HttpStatusCode = 403 状态码</remarks>
            </summary>
            <param name="context"><see cref="T:Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext"/></param>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="M:Fast.JwtBearer.IJwtBearerHandle.AuthorizeFailHandle(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,Microsoft.AspNetCore.Http.HttpContext,System.Exception)">
            <summary>
            授权失败处理
            <remarks>如果返回 null，则走默认处理 AuthorizationHandlerContext.Fail()</remarks>
            </summary>
            <param name="context"><see cref="T:Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext"/></param>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <param name="exception"><see cref="T:System.Exception"/></param>
            <returns></returns>
        </member>
        <member name="M:Fast.JwtBearer.IJwtBearerHandle.PermissionHandle(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,Microsoft.AspNetCore.Authorization.IAuthorizationRequirement,Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            权限判断处理
            <remarks>这里只需要判断你的权限逻辑即可，如果返回 false或抛出异常 则抛出 HttpStatusCode = 403 状态码</remarks>
            </summary>
            <param name="context"><see cref="T:Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext"/></param>
            <param name="requirement"><see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizationRequirement"/></param>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <returns></returns>
        </member>
        <member name="M:Fast.JwtBearer.IJwtBearerHandle.PermissionFailHandle(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,Microsoft.AspNetCore.Authorization.IAuthorizationRequirement,Microsoft.AspNetCore.Http.HttpContext,System.Exception)">
            <summary>
            权限判断失败处理
            <remarks>如果返回 null，则走默认处理 AuthorizationHandlerContext.Fail()</remarks>
            </summary>
            <param name="context"><see cref="T:Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext"/></param>
            <param name="requirement"><see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizationRequirement"/></param>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <param name="exception"><see cref="T:System.Exception"/></param>
            <returns></returns>
        </member>
        <member name="T:Fast.JwtBearer.Penetrates">
            <summary>
            <see cref="T:Fast.JwtBearer.Penetrates"/> 常量，公共方法配置类
            </summary>
        </member>
        <member name="P:Fast.JwtBearer.Penetrates.JWTSettings">
            <summary>
            Jwt 配置
            </summary>
        </member>
        <member name="T:Fast.JwtBearer.JWTSettingsOptions">
            <summary>
            <see cref="T:Fast.JwtBearer.JWTSettingsOptions"/> Jwt 配置
            </summary>
        </member>
        <member name="P:Fast.JwtBearer.JWTSettingsOptions.ValidateIssuerSigningKey">
            <summary>
            验证签发方密钥
            <remarks>默认false</remarks>
            </summary>
        </member>
        <member name="P:Fast.JwtBearer.JWTSettingsOptions.IssuerSigningKey">
            <summary>
            签发方密钥
            </summary>
        </member>
        <member name="P:Fast.JwtBearer.JWTSettingsOptions.ValidateIssuer">
            <summary>
            验证签发方
            <remarks>默认false</remarks>
            </summary>
        </member>
        <member name="P:Fast.JwtBearer.JWTSettingsOptions.ValidIssuer">
            <summary>
            签发方
            </summary>
        </member>
        <member name="P:Fast.JwtBearer.JWTSettingsOptions.ValidateAudience">
            <summary>
            验证签收方
            <remarks>默认false</remarks>
            </summary>
        </member>
        <member name="P:Fast.JwtBearer.JWTSettingsOptions.ValidAudience">
            <summary>
            签收方
            </summary>
        </member>
        <member name="P:Fast.JwtBearer.JWTSettingsOptions.ValidateLifetime">
            <summary>
            验证生存期
            <remarks>默认false</remarks>
            </summary>
        </member>
        <member name="P:Fast.JwtBearer.JWTSettingsOptions.ClockSkew">
            <summary>
            过期时间容错值，解决服务器端时间不同步问题（秒）
            <remarks>默认5秒</remarks>
            </summary>
        </member>
        <member name="P:Fast.JwtBearer.JWTSettingsOptions.TokenExpiredTime">
            <summary>
            Token 过期时间（分钟）
            <remarks>默认20分钟</remarks>
            </summary>
        </member>
        <member name="P:Fast.JwtBearer.JWTSettingsOptions.RefreshTokenExpireTime">
            <summary>
            刷新Token 过期时间（分钟）
            <remarks>默认1440分钟(24小时)</remarks>
            </summary>
        </member>
        <member name="P:Fast.JwtBearer.JWTSettingsOptions.Algorithm">
            <summary>
            加密算法
            <remarks>默认HS256</remarks>
            </summary>
        </member>
        <member name="P:Fast.JwtBearer.JWTSettingsOptions.Enable">
            <summary>
            启用
            <remarks>默认true</remarks>
            </summary>
        </member>
        <member name="M:Fast.JwtBearer.JWTSettingsOptions.PostConfigure">
            <summary>
            后期配置
            </summary>
        </member>
        <member name="T:Fast.JwtBearer.AppAuthorizationPolicyProvider">
            <summary>
            授权策略提供器
            </summary>
        </member>
        <member name="P:Fast.JwtBearer.AppAuthorizationPolicyProvider.FallbackPolicyProvider">
            <summary>
            默认回退策略
            </summary>
        </member>
        <member name="M:Fast.JwtBearer.AppAuthorizationPolicyProvider.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Authorization.AuthorizationOptions})">
            <summary>
            构造函数
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:Fast.JwtBearer.AppAuthorizationPolicyProvider.GetDefaultPolicyAsync">
            <summary>
            获取默认策略
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fast.JwtBearer.AppAuthorizationPolicyProvider.GetFallbackPolicyAsync">
            <summary>
            获取回退策略
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fast.JwtBearer.AppAuthorizationPolicyProvider.GetPolicyAsync(System.String)">
            <summary>
            获取策略
            </summary>
            <param name="policyName"></param>
            <returns></returns>
        </member>
        <member name="T:Fast.JwtBearer.AppAuthorizeRequirement">
            <summary>
            策略对应的需求
            </summary>
        </member>
        <member name="M:Fast.JwtBearer.AppAuthorizeRequirement.#ctor(System.String[])">
            <summary>
            构造函数
            </summary>
            <param name="policies"></param>
        </member>
        <member name="P:Fast.JwtBearer.AppAuthorizeRequirement.Policies">
            <summary>
            策略
            </summary>
        </member>
        <member name="T:Fast.JwtBearer.JwtBearerUtil">
            <summary>
            <see cref="T:Fast.JwtBearer.JwtBearerUtil"/> JwtBearer 工具类
            </summary>
        </member>
        <member name="F:Fast.JwtBearer.JwtBearerUtil.DateTypeClaimTypes">
            <summary>
            日期类型的 Claim 类型
            </summary>
        </member>
        <member name="F:Fast.JwtBearer.JwtBearerUtil.RefreshTokenClaims">
            <summary>
            刷新 Token 身份标识
            </summary>
        </member>
        <member name="M:Fast.JwtBearer.JwtBearerUtil.CreateTokenValidationParameters(Fast.JwtBearer.JWTSettingsOptions)">
            <summary>
            生成Token验证参数
            </summary>
            <param name="jwtSettings"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.JwtBearer.JwtBearerUtil.GenerateToken(System.Collections.Generic.IDictionary{System.String,System.Object},System.Nullable{System.Int64})">
            <summary>
            生成 Token
            </summary>
            <param name="payload"></param>
            <param name="expiredTime">过期时间（分钟）</param>
            <returns></returns>
        </member>
        <member name="M:Fast.JwtBearer.JwtBearerUtil.GenerateRefreshToken(System.String)">
            <summary>
            生成刷新 Token
            </summary>
            <param name="accessToken"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.JwtBearer.JwtBearerUtil.GetJwtBearerToken(Microsoft.AspNetCore.Http.HttpContext,System.String,System.String)">
            <summary>
            获取 JWT Bearer Token
            </summary>
            <param name="httpContext"></param>
            <param name="headerKey"></param>
            <param name="tokenPrefix"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.JwtBearer.JwtBearerUtil.Validate(System.String)">
            <summary>
            验证 Token
            </summary>
            <param name="accessToken"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.JwtBearer.JwtBearerUtil.ValidateJwtBearerToken(Microsoft.AspNetCore.Http.DefaultHttpContext,Microsoft.IdentityModel.JsonWebTokens.JsonWebToken@,System.String,System.String)">
            <summary>
            验证 Token
            </summary>
            <param name="httpContext"></param>
            <param name="token"></param>
            <param name="headerKey"></param>
            <param name="tokenPrefix"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.JwtBearer.JwtBearerUtil.ReadJwtToken(System.String)">
            <summary>
            读取 Token，不含验证
            </summary>
            <param name="accessToken"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.JwtBearer.JwtBearerUtil.SecurityReadJwtToken(System.String)">
            <summary>
            读取 Token
            </summary>
            <remarks>会验证签名等</remarks>
            <param name="accessToken"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.JwtBearer.JwtBearerUtil.Exchange(Microsoft.AspNetCore.Http.HttpContext,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            通过过期Token 和 刷新Token 换取新的 Token
            </summary>
            <param name="httpContext"></param>
            <param name="expiredToken"></param>
            <param name="refreshToken"></param>
            <param name="expiredTime">过期时间（分钟）</param>
            <param name="clockSkew">刷新token容差值，秒做单位</param>
            <returns></returns>
        </member>
        <member name="M:Fast.JwtBearer.JwtBearerUtil.AutoRefreshToken(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,Microsoft.AspNetCore.Http.HttpContext,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64})">
            <summary>
            自动刷新 Token 信息
            </summary>
            <param name="context"></param>
            <param name="httpContext"></param>
            <param name="expiredTime">新 Token 过期时间（分钟）</param>
            <param name="tokenPrefix"></param>
            <param name="clockSkew"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Authorization.PermissionAttribute">
            <summary>
            <see cref="T:Microsoft.AspNetCore.Authorization.PermissionAttribute"/> 权限
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authorization.PermissionAttribute.TagList">
            <summary>
            权限标识集合
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authorization.PermissionAttribute.#ctor">
            <summary>
            <see cref="T:Microsoft.AspNetCore.Authorization.PermissionAttribute"/> 权限
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authorization.PermissionAttribute.#ctor(System.String[])">
            <summary>
            <see cref="T:Microsoft.AspNetCore.Authorization.PermissionAttribute"/> 权限
            </summary>
            <param name="tagList"><see cref="T:System.Collections.Generic.List`1"/>权限标识集合</param>
        </member>
    </members>
</doc>
