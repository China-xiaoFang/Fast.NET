<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Fast.DynamicApplication</name>
    </assembly>
    <members>
        <member name="T:Fast.DynamicApplication.ApiDescriptionSettingsAttribute">
            <summary>
            接口描述设置
            </summary>
        </member>
        <member name="M:Fast.DynamicApplication.ApiDescriptionSettingsAttribute.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Fast.DynamicApplication.ApiDescriptionSettingsAttribute.#ctor(System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="enabled">是否启用</param>
        </member>
        <member name="M:Fast.DynamicApplication.ApiDescriptionSettingsAttribute.#ctor(System.String[])">
            <summary>
            构造函数
            </summary>
            <param name="groups">分组列表</param>
        </member>
        <member name="P:Fast.DynamicApplication.ApiDescriptionSettingsAttribute.Name">
            <summary>
            自定义名称
            </summary>
        </member>
        <member name="P:Fast.DynamicApplication.ApiDescriptionSettingsAttribute.KeepName">
            <summary>
            保留原有名称（Boolean 类型）
            </summary>
        </member>
        <member name="P:Fast.DynamicApplication.ApiDescriptionSettingsAttribute.SplitCamelCase">
            <summary>
            切割骆驼命名（Boolean 类型）
            </summary>
        </member>
        <member name="P:Fast.DynamicApplication.ApiDescriptionSettingsAttribute.AsLowerCamelCase">
            <summary>
            小驼峰命名（首字符小写）
            </summary>
        </member>
        <member name="P:Fast.DynamicApplication.ApiDescriptionSettingsAttribute.KeepVerb">
            <summary>
            保留路由谓词（Boolean 类型）
            </summary>
        </member>
        <member name="P:Fast.DynamicApplication.ApiDescriptionSettingsAttribute.LowercaseRoute">
            <summary>
            小写路由（Boolean 类型）
            </summary>
        </member>
        <member name="P:Fast.DynamicApplication.ApiDescriptionSettingsAttribute.Module">
            <summary>
            模块名
            </summary>
        </member>
        <member name="P:Fast.DynamicApplication.ApiDescriptionSettingsAttribute.Version">
            <summary>
            版本号
            </summary>
        </member>
        <member name="P:Fast.DynamicApplication.ApiDescriptionSettingsAttribute.Groups">
            <summary>
            分组
            </summary>
        </member>
        <member name="P:Fast.DynamicApplication.ApiDescriptionSettingsAttribute.Tag">
            <summary>
            标签
            </summary>
        </member>
        <member name="P:Fast.DynamicApplication.ApiDescriptionSettingsAttribute.Order">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:Fast.DynamicApplication.ApiDescriptionSettingsAttribute.Area">
            <summary>
            配置控制器区域（只对控制器有效）
            </summary>
        </member>
        <member name="P:Fast.DynamicApplication.ApiDescriptionSettingsAttribute.Description">
            <summary>
            额外描述，支持 HTML
            </summary>
        </member>
        <member name="P:Fast.DynamicApplication.ApiDescriptionSettingsAttribute.ForceWithRoutePrefix">
            <summary>
            强制携带路由前缀，即使使用 [Route] 重写，仅对 Class/Controller 有效
            </summary>
        </member>
        <member name="T:Fast.DynamicApplication.Conventions.DynamicApiControllerApplicationModelConvention">
            <summary>
            动态接口控制器应用模型转换器
            </summary>
        </member>
        <member name="F:Fast.DynamicApplication.Conventions.DynamicApiControllerApplicationModelConvention._nameVersionRegex">
            <summary>
            带版本的名称正则表达式
            </summary>
        </member>
        <member name="F:Fast.DynamicApplication.Conventions.DynamicApiControllerApplicationModelConvention._services">
            <summary>
            服务集合
            </summary>
        </member>
        <member name="F:Fast.DynamicApplication.Conventions.DynamicApiControllerApplicationModelConvention.commonTemplatePattern">
            <summary>
            模板正则表达式
            </summary>
        </member>
        <member name="M:Fast.DynamicApplication.Conventions.DynamicApiControllerApplicationModelConvention.#ctor(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            构造函数
            </summary>
            <param name="services">服务集合</param>
        </member>
        <member name="M:Fast.DynamicApplication.Conventions.DynamicApiControllerApplicationModelConvention.Apply(Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel)">
            <summary>
            配置应用模型信息
            </summary>
            <param name="application">引用模型</param>
        </member>
        <member name="M:Fast.DynamicApplication.Conventions.DynamicApiControllerApplicationModelConvention.ConfigureController(Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel,Fast.DynamicApplication.ApiDescriptionSettingsAttribute,System.Collections.Concurrent.ConcurrentDictionary{System.String,System.ValueTuple{System.String,System.Int32,System.Type}})">
            <summary>
            配置控制器
            </summary>
            <param name="controller">控制器模型</param>
            <param name="controllerApiDescriptionSettings">接口描述配置</param>
            <param name="controllerOrderCollection"></param>
        </member>
        <member name="M:Fast.DynamicApplication.Conventions.DynamicApiControllerApplicationModelConvention.ConfigureControllerArea(Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel,Fast.DynamicApplication.ApiDescriptionSettingsAttribute)">
            <summary>
            配置控制器区域
            </summary>
            <param name="controller"></param>
            <param name="controllerApiDescriptionSettings"></param>
        </member>
        <member name="M:Fast.DynamicApplication.Conventions.DynamicApiControllerApplicationModelConvention.ConfigureControllerName(Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel,Fast.DynamicApplication.ApiDescriptionSettingsAttribute)">
            <summary>
            配置控制器名称
            </summary>
            <param name="controller">控制器模型</param>
            <param name="controllerApiDescriptionSettings">接口描述配置</param>
        </member>
        <member name="M:Fast.DynamicApplication.Conventions.DynamicApiControllerApplicationModelConvention.ConfigureAction(Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel,Fast.DynamicApplication.ApiDescriptionSettingsAttribute,Fast.DynamicApplication.ApiDescriptionSettingsAttribute,System.Boolean)">
            <summary>
            配置动作方法
            </summary>
            <param name="action">控制器模型</param>
            <param name="apiDescriptionSettings">接口描述配置</param>
            <param name="controllerApiDescriptionSettings">控制器接口描述配置</param>
            <param name="hasApiControllerAttribute">是否贴有 ApiController 特性</param>
        </member>
        <member name="M:Fast.DynamicApplication.Conventions.DynamicApiControllerApplicationModelConvention.ConfigureActionApiExplorer(Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel)">
            <summary>
            配置动作方法接口可见性
            </summary>
            <param name="action">动作方法模型</param>
        </member>
        <member name="M:Fast.DynamicApplication.Conventions.DynamicApiControllerApplicationModelConvention.ConfigureActionName(Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel,Fast.DynamicApplication.ApiDescriptionSettingsAttribute,Fast.DynamicApplication.ApiDescriptionSettingsAttribute)">
            <summary>
            配置动作方法名称
            </summary>
            <param name="action">动作方法模型</param>
            <param name="apiDescriptionSettings">接口描述配置</param>
            <param name="controllerApiDescriptionSettings"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.DynamicApplication.Conventions.DynamicApiControllerApplicationModelConvention.ConfigureActionHttpMethodAttribute(Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel)">
            <summary>
            配置动作方法请求谓词特性
            </summary>
            <param name="action">动作方法模型</param>
        </member>
        <member name="M:Fast.DynamicApplication.Conventions.DynamicApiControllerApplicationModelConvention.ConfigureClassTypeParameter(Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel)">
            <summary>
            处理类类型参数（添加[FromBody] 特性）
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:Fast.DynamicApplication.Conventions.DynamicApiControllerApplicationModelConvention.ConfigureActionRouteAttribute(Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel,Fast.DynamicApplication.ApiDescriptionSettingsAttribute,Fast.DynamicApplication.ApiDescriptionSettingsAttribute,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            配置动作方法路由特性
            </summary>
            <param name="action">动作方法模型</param>
            <param name="apiDescriptionSettings">接口描述配置</param>
            <param name="controllerApiDescriptionSettings">控制器接口描述配置</param>
            <param name="isLowercaseRoute"></param>
            <param name="isKeepName"></param>
            <param name="isLowerCamelCase"></param>
            <param name="hasApiControllerAttribute"></param>
        </member>
        <member name="M:Fast.DynamicApplication.Conventions.DynamicApiControllerApplicationModelConvention.GenerateControllerRouteTemplate(Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel,Fast.DynamicApplication.ApiDescriptionSettingsAttribute)">
            <summary>
            生成控制器路由模板
            </summary>
            <param name="controller"></param>
            <param name="apiDescriptionSettings"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.DynamicApplication.Conventions.DynamicApiControllerApplicationModelConvention.ConfigureControllerAndActionName(Fast.DynamicApplication.ApiDescriptionSettingsAttribute,System.String,System.Func{System.String,System.String},Fast.DynamicApplication.ApiDescriptionSettingsAttribute,System.String)">
            <summary>
            配置控制器和动作方法名称
            </summary>
            <param name="apiDescriptionSettings"></param>
            <param name="orignalName"></param>
            <param name="configure"></param>
            <param name="controllerApiDescriptionSettings"></param>
            <param name="actionName">针对 [ActionName] 特性和 [HttpMethod] 特性处理</param>
            <returns></returns>
        </member>
        <member name="M:Fast.DynamicApplication.Conventions.DynamicApiControllerApplicationModelConvention.CheckIsKeepName(Fast.DynamicApplication.ApiDescriptionSettingsAttribute,Fast.DynamicApplication.ApiDescriptionSettingsAttribute)">
            <summary>
            检查是否设置了 KeepName参数
            </summary>
            <param name="apiDescriptionSettings"></param>
            <param name="controllerApiDescriptionSettings"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.DynamicApplication.Conventions.DynamicApiControllerApplicationModelConvention.CheckIsLowerCamelCase(Fast.DynamicApplication.ApiDescriptionSettingsAttribute,Fast.DynamicApplication.ApiDescriptionSettingsAttribute)">
            <summary>
            检查是否设置了 AsLowerCamelCase 参数
            </summary>
            <param name="apiDescriptionSettings"></param>
            <param name="controllerApiDescriptionSettings"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.DynamicApplication.Conventions.DynamicApiControllerApplicationModelConvention.CheckIsSplitCamelCase(Fast.DynamicApplication.ApiDescriptionSettingsAttribute,Fast.DynamicApplication.ApiDescriptionSettingsAttribute)">
            <summary>
            判断切割命名参数是否配置
            </summary>
            <param name="apiDescriptionSettings"></param>
            <param name="controllerApiDescriptionSettings"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.DynamicApplication.Conventions.DynamicApiControllerApplicationModelConvention.CheckIsLowercaseRoute(Fast.DynamicApplication.ApiDescriptionSettingsAttribute,Fast.DynamicApplication.ApiDescriptionSettingsAttribute)">
            <summary>
            检查是否启用小写路由
            </summary>
            <param name="apiDescriptionSettings"></param>
            <param name="controllerApiDescriptionSettings"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.DynamicApplication.Conventions.DynamicApiControllerApplicationModelConvention.ResolveNameVersion(System.String)">
            <summary>
            解析名称中的版本号
            </summary>
            <param name="name">名称</param>
            <returns>名称和版本号</returns>
        </member>
        <member name="M:Fast.DynamicApplication.Conventions.DynamicApiControllerApplicationModelConvention.HandleRouteTemplateRepeat(System.String)">
            <summary>
            处理路由模板重复参数
            </summary>
            <param name="template"></param>
            <returns></returns>
        </member>
        <member name="T:Fast.DynamicApplication.IDynamicApplication">
            <summary>
            <see cref="T:Fast.DynamicApplication.IDynamicApplication"/> 动态API应用依赖接口
            </summary>
        </member>
        <member name="T:Fast.DynamicApplication.Extensions.DynamicApplicationIServiceCollectionExtension">
            <summary>
            <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> 动态API应用拓展类
            </summary>
        </member>
        <member name="M:Fast.DynamicApplication.Extensions.DynamicApplicationIServiceCollectionExtension.AddDynamicApiControllers(Microsoft.Extensions.DependencyInjection.IMvcBuilder)">
            <summary>
            添加动态接口控制器服务
            </summary>
            <param name="mvcBuilder"><see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>Mvc构建器</param>
            <returns><see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>Mvc构建器</returns>
        </member>
        <member name="M:Fast.DynamicApplication.Extensions.DynamicApplicationIServiceCollectionExtension.AddDynamicApiControllers(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            添加动态接口控制器服务
            </summary>
            <param name="services"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
            <returns><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="T:Fast.DynamicApplication.Formatters.TextPlainMediaTypeFormatter">
            <summary>
            text/plain 请求 Body 参数支持
            </summary>
        </member>
        <member name="M:Fast.DynamicApplication.Formatters.TextPlainMediaTypeFormatter.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Fast.DynamicApplication.Formatters.TextPlainMediaTypeFormatter.ReadRequestBodyAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext,System.Text.Encoding)">
            <summary>
            重写 <see cref="M:Fast.DynamicApplication.Formatters.TextPlainMediaTypeFormatter.ReadRequestBodyAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext,System.Text.Encoding)"/>
            </summary>
            <param name="context"></param>
            <param name="effectiveEncoding"></param>
            <returns></returns>
        </member>
        <member name="T:Fast.DynamicApplication.Internal.Penetrates">
            <summary>
            常量、公共方法配置类
            </summary>
        </member>
        <member name="F:Fast.DynamicApplication.Internal.Penetrates.GroupSeparator">
            <summary>
            分组分隔符
            </summary>
        </member>
        <member name="M:Fast.DynamicApplication.Internal.Penetrates.#cctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="F:Fast.DynamicApplication.Internal.Penetrates.IsApiControllerCached">
            <summary>
            <see cref="M:Fast.DynamicApplication.Internal.Penetrates.IsApiController(System.Type)"/> 缓存集合
            </summary>
        </member>
        <member name="M:Fast.DynamicApplication.Internal.Penetrates.IsApiController(System.Type)">
            <summary>
            是否是Api控制器
            </summary>
            <param name="type">type</param>
            <returns></returns>
        </member>
        <member name="T:Fast.DynamicApplication.Providers.DynamicApplicationFeatureProvider">
            <summary>
            动态API引用特性提供器
            </summary>
        </member>
        <member name="M:Fast.DynamicApplication.Providers.DynamicApplicationFeatureProvider.IsController(System.Reflection.TypeInfo)">
            <summary>
            扫描控制器
            </summary>
            <param name="typeInfo">类型</param>
            <returns>bool</returns>
        </member>
    </members>
</doc>
