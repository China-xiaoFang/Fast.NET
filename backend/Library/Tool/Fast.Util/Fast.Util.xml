<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Fast.Util</name>
    </assembly>
    <members>
        <member name="T:Fast.Util.AESUtil">
            <summary>
            AES加密解密工具类
            </summary>
        </member>
        <member name="M:Fast.Util.AESUtil.AESEncrypt(System.String,System.String,System.String,System.Security.Cryptography.CipherMode,System.Security.Cryptography.PaddingMode)">
            <summary>
            AES加密
            </summary>
            <param name="dataStr"></param>
            <param name="key"></param>
            <param name="vector"></param>
            <param name="cipherMode"></param>
            <param name="paddingMode"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.Util.AESUtil.AESDecrypt(System.String,System.String,System.String,System.Security.Cryptography.CipherMode,System.Security.Cryptography.PaddingMode)">
            <summary>
            AES解密
            </summary>
            <param name="dataStr"></param>
            <param name="key"></param>
            <param name="vector"></param>
            <param name="cipherMode"></param>
            <param name="paddingMode"></param>
            <returns></returns>
        </member>
        <member name="T:Fast.Util.ShareCodeUtil">
            <summary>
            邀请码工具类
            </summary>
        </member>
        <member name="M:Fast.Util.ShareCodeUtil.IdToCode(System.Int64)">
            <summary>
            ID转换为邀请码
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.Util.ShareCodeUtil.CodeToId(System.String)">
            <summary>
            邀请码解析出ID,基本操作思路恰好与idToCode反向操作。
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.Util.ShareCodeUtil.PrintBase">
            <summary>
            显示用于进制编码的所有字符串
            </summary>
            <returns></returns>
        </member>
        <member name="T:Fast.Util.StringUtil">
            <summary>
            String工具类
            </summary>
        </member>
        <member name="M:Fast.Util.StringUtil.GetVerCode(System.Int32)">
            <summary>
            得到验证码
            </summary>
            <param name="len"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.Util.StringUtil.AlignmentStrFunc(System.String,System.Int32)">
            <summary>
            将字符串生转化为固定长度左对齐，右补空格
            </summary>
            <param name="strTemp"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.Util.StringUtil.SpaceStrFunc(System.Int32)">
            <summary>
            生成固定长度的空格字符串
            </summary>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.Util.StringUtil.GetSubString(System.String,System.Int32,System.Boolean)">
            <summary>
            截取指定长度的字符串
            </summary>
            <param name="value"></param>
            <param name="length"></param>
            <param name="ellipsis"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.Util.StringUtil.GetGuid(System.String)">
            <summary>
            生成一个Guid
            N ece4f4a60b764339b94a07c84e338a27
            D 5bf99df1-dc49-4023-a34a-7bd80a42d6bb
            B {2280f8d7-fd18-4c72-a9ab-405de3fcfbc9}
            P (25e6e09f-fb66-4cab-b4cd-bfb429566549)
            </summary>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.Util.StringUtil.GetShortGuid">
            <summary>
            生成一个短的Guid
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fast.Util.StringUtil.DicToXmlStr(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            将Dic字典转换成字符串
            </summary>
            <param name="dic"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.Util.StringUtil.XmlStrToDic(System.String)">
            <summary>
            将字符串转换为Dic字典
            </summary>
            <param name="xml"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.Util.StringUtil.SortDicToXmlStr(System.Collections.Generic.SortedDictionary{System.String,System.Object})">
            <summary>
            将Dic字典转换成字符串
            </summary>
            <param name="dic"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.Util.StringUtil.XmlStrToSortDic(System.String)">
            <summary>
            将字符串转换为Dic字典
            </summary>
            <param name="xml"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.Util.StringUtil.GenerateMd5(System.String)">
            <summary>
            生成MD5
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.Util.StringUtil.EnUnicode(System.String)">
            <summary>
            Unicode编码
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.Util.StringUtil.DeUnicode(System.String)">
            <summary>
            Unicode解码
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.Util.StringUtil.GetFileSHA1(System.String)">
            <summary>
            得到文件SHA1
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.Util.StringUtil.EnAscii(System.String)">
            <summary>
            ASCII编码
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.Util.StringUtil.DeAscii(System.String)">
            <summary>
            ASCII解码
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.Util.StringUtil.ToUnicode(System.String)">
            <summary>
            [弃用]把中文字符串转换为Unicode串
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.Util.StringUtil.ToChinese(System.String)">
            <summary>
            [弃用]把Unicode串转换为中文字符串
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.Util.StringUtil.IsChinese(System.Char)">
            <summary>
            [弃用]判断字符是否为中文字符
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.Util.StringUtil.ToString(System.Int32,System.Int32)">
            <summary>
            [弃用]把数值转换为radix进制表示的字符串
            </summary>
            <param name="num"></param>
            <param name="radix"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Fast.Util.StringUtil.ToChar(System.Int32)" -->
        <member name="M:Fast.Util.StringUtil.ToInt(System.Char)">
            <summary>
            [弃用]将字符转换为数值
            将字符0-9a-z依次转化为数值0-35
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.Util.StringUtil.ToChar(System.String,System.Int32)">
            <summary>
            [弃用]将字符串radix进制的串str转化为字符
            </summary>
            <param name="str"></param>
            <param name="radix"></param>
            <returns></returns>
        </member>
        <member name="T:Fast.Util.ITreeNode">
            <summary>
            树基类
            </summary>
        </member>
        <member name="M:Fast.Util.ITreeNode.GetId">
            <summary>
            获取节点id
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fast.Util.ITreeNode.GetPid">
            <summary>
            获取节点父id
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fast.Util.ITreeNode.Sort">
            <summary>
            获取排序字段
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fast.Util.ITreeNode.SetChildren(System.Collections.IList)">
            <summary>
            设置Children
            </summary>
            <param name="children"></param>
        </member>
        <member name="T:Fast.Util.TreeBuildUtil`1">
            <summary>
            递归工具类，用于遍历有父子关系的节点，例如菜单树，字典树等等
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:Fast.Util.TreeBuildUtil`1._rootParentId">
            <summary>
            顶级节点的父节点Id(默认0)
            </summary>
        </member>
        <member name="M:Fast.Util.TreeBuildUtil`1.SetRootParentId(System.Int64)">
            <summary>
            设置根节点方法
            查询数据可以设置其他节点为根节点，避免父节点永远是0，查询不到数据的问题
            </summary>
        </member>
        <member name="M:Fast.Util.TreeBuildUtil`1.Build(System.Collections.Generic.List{`0})">
            <summary>
            构造树节点
            </summary>
            <param name="nodes"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.Util.TreeBuildUtil`1.BuildChildNodes(System.Collections.Generic.List{`0},`0)">
            <summary>
            构造子节点集合
            </summary>
            <param name="totalNodes"></param>
            <param name="node"></param>
        </member>
        <member name="T:Fast.Util.ValidatorUtil">
            <summary>
            字符串验证帮助类
            </summary>
        </member>
        <member name="M:Fast.Util.ValidatorUtil.IsNumber(System.String)">
            <summary>
            验证输入字符串为带小数点正数
            </summary>
            <param name="str">输入字符</param>
            <returns>返回一个bool类型的值</returns>
        </member>
        <member name="M:Fast.Util.ValidatorUtil.IsNumberic(System.String)">
            <summary>
            验证输入字符串为带小数点正负数
            </summary>
            <param name="str">输入字符</param>
            <returns>返回一个bool类型的值</returns>
        </member>
        <member name="M:Fast.Util.ValidatorUtil.IsTel(System.String)">
            <summary>
            验证中国电话格式是否有效，格式010-85849685
            </summary>
            <param name="str">输入字符</param>
            <returns>返回一个bool类型的值</returns>
        </member>
        <member name="M:Fast.Util.ValidatorUtil.IsPhone(System.String)">
            <summary>
            验证输入字符串为电话号码
            </summary>
            <param name="str">输入字符</param>
            <returns>返回一个bool类型的值</returns>
        </member>
        <member name="M:Fast.Util.ValidatorUtil.IsFax(System.String)">
            <summary>
            验证是否是有效传真号码
            </summary>
            <param name="str">输入字符</param>
            <returns>返回一个bool类型的值</returns>
        </member>
        <member name="M:Fast.Util.ValidatorUtil.IsMobile(System.String)">
            <summary>
            验证手机号是否合法 号段为13,14,15,16,17,18,19  0，86开头将自动识别
            </summary>
            <param name="str">输入字符</param>
            <returns>返回一个bool类型的值</returns>
        </member>
        <member name="M:Fast.Util.ValidatorUtil.IsIdCard(System.String)">
            <summary>
            验证身份证是否有效
            </summary>
            <param name="str">输入字符</param>
            <returns>返回一个bool类型的值</returns>
        </member>
        <member name="M:Fast.Util.ValidatorUtil.IsIdCard18(System.String)">
            <summary>
            验证输入字符串为18位的身份证号码
            </summary>
            <param name="str">输入字符</param>
            <returns>返回一个bool类型的值</returns>
        </member>
        <member name="M:Fast.Util.ValidatorUtil.IsIdCard15(System.String)">
            <summary>
            验证输入字符串为15位的身份证号码
            </summary>
            <param name="str">输入字符</param>
            <returns>返回一个bool类型的值</returns>
        </member>
        <member name="M:Fast.Util.ValidatorUtil.IsEmail(System.String)">
            <summary>
            验证是否是有效邮箱地址
            </summary>
            <param name="str">输入字符</param>
            <returns>返回一个bool类型的值</returns>
        </member>
        <member name="M:Fast.Util.ValidatorUtil.IsQqEmail(System.String)">
            <summary>
            验证是否是有效QQ邮箱地址
            </summary>
            <param name="str">输入字符</param>
            <returns>返回一个bool类型的值</returns>
        </member>
        <member name="M:Fast.Util.ValidatorUtil.IsOnlyChinese(System.String)">
            <summary>
            验证是否只含有汉字
            </summary>
            <param name="strLn">输入字符</param>
            <returns></returns>
        </member>
        <member name="M:Fast.Util.ValidatorUtil.IsBadString(System.String)">
            <summary>
            是否有多余的字符 防止SQL注入
            </summary>
            <param name="str">输入字符</param>
            <returns></returns>
        </member>
        <member name="M:Fast.Util.ValidatorUtil.IsNzx(System.String)">
            <summary>
            是否由数字、26个英文字母或者下划线組成的字串 
            </summary>
            <param name="str">输入字符</param>
            <returns></returns>
        </member>
        <member name="M:Fast.Util.ValidatorUtil.IsSzzmChinese(System.String)">
            <summary>
            由数字、26个英文字母、汉字組成的字串
            </summary>
            <param name="str">输入字符</param>
            <returns></returns>
        </member>
        <member name="M:Fast.Util.ValidatorUtil.IsSzzm(System.String)">
            <summary>
            是否由数字、26个英文字母組成的字串
            </summary>
            <param name="str">输入字符</param>
            <returns></returns>
        </member>
        <member name="M:Fast.Util.ValidatorUtil.IsPostCode(System.String)">
            <summary>
            验证输入字符串为邮政编码
            </summary>
            <param name="str">输入字符</param>
            <returns>返回一个bool类型的值</returns>
        </member>
        <member name="M:Fast.Util.ValidatorUtil.CheckLength(System.String,System.Int32)">
            <summary>
            检查对象的输入长度
            </summary>
            <param name="str">输入字符</param>
            <param name="length">指定的长度</param>
            <returns>false 太长，true -太短</returns>
        </member>
        <member name="M:Fast.Util.ValidatorUtil.IsDateTime(System.String)">
            <summary>
            判断用户输入是否为日期
            </summary>
            <param name="str">输入字符</param>
            <returns>返回一个bool类型的值</returns>
            <remarks>
            可判断格式如下（其中-可替换为/，不影响验证)
            YYYY | YYYY-MM | YYYY-MM-DD | YYYY-MM-DD HH:MM:SS | YYYY-MM-DD HH:MM:SS.FFF
            </remarks>
        </member>
    </members>
</doc>
