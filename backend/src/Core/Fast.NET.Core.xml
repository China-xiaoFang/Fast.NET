<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Fast.NET.Core</name>
    </assembly>
    <members>
        <member name="T:Fast.NET.Core.FastContext">
            <summary>
            <see cref="T:Fast.NET.Core.FastContext"/> App 上下文
            </summary>
        </member>
        <member name="P:Fast.NET.Core.FastContext.Assemblies">
            <summary>
            应用有效程序集
            </summary>
        </member>
        <member name="P:Fast.NET.Core.FastContext.EffectiveTypes">
            <summary>
            有效程序集类型
            </summary>
        </member>
        <member name="M:Fast.NET.Core.FastContext.CatchOrDefault``1(System.Func{``0},``0)">
            <summary>
            处理获取对象异常问题
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="action">获取对象委托</param>
            <param name="defaultValue">默认值</param>
            <returns>T</returns>
        </member>
        <member name="M:Fast.NET.Core.FastContext.GetThreadId">
            <summary>
            获取当前线程 Id
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.FastContext.GetTraceId">
            <summary>
            获取当前请求 TraceId
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.FastContext.GetExecutionTime(System.Action)">
            <summary>
            获取一段代码执行耗时
            </summary>
            <param name="action">委托</param>
            <returns><see cref="T:System.Int64"/></returns>
        </member>
        <member name="P:Fast.NET.Core.FastContext.WebHostEnvironment">
            <summary>
            获取Web主机环境
            </summary>
        </member>
        <member name="P:Fast.NET.Core.FastContext.HostEnvironment">
            <summary>
            获取主机环境
            </summary>
        </member>
        <member name="P:Fast.NET.Core.FastContext.InternalServices">
            <summary>
            应用服务
            </summary>
        </member>
        <member name="P:Fast.NET.Core.FastContext.WebApplication">
            <summary>
            应用程序构建器
            </summary>
        </member>
        <member name="P:Fast.NET.Core.FastContext.RootServices">
            <summary>
            存储根服务，可能为空
            </summary>
        </member>
        <member name="P:Fast.NET.Core.FastContext.Configuration">
            <summary>
            配置
            </summary>
        </member>
        <member name="P:Fast.NET.Core.FastContext.HttpContext">
            <summary>
            请求上下文
            </summary>
        </member>
        <member name="M:Fast.NET.Core.FastContext.GetService``1(System.IServiceProvider)">
            <summary>
            获取请求生存周期的服务
            </summary>
            <typeparam name="TService"></typeparam>
            <param name="serviceProvider"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.FastContext.GetService(System.Type,System.IServiceProvider)">
            <summary>
            获取请求生存周期的服务
            </summary>
            <param name="type"></param>
            <param name="serviceProvider"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.FastContext.GetServices``1(System.IServiceProvider)">
            <summary>
            获取请求生存周期的服务集合
            </summary>
            <typeparam name="TService"></typeparam>
            <param name="serviceProvider"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.FastContext.GetServices(System.Type,System.IServiceProvider)">
            <summary>
            获取请求生存周期的服务集合
            </summary>
            <param name="type"></param>
            <param name="serviceProvider"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.FastContext.GetRequiredService``1(System.IServiceProvider)">
            <summary>
            获取请求生存周期的服务
            </summary>
            <typeparam name="TService"></typeparam>
            <param name="serviceProvider"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.FastContext.GetRequiredService(System.Type,System.IServiceProvider)">
            <summary>
            获取请求生存周期的服务
            </summary>
            <param name="type"></param>
            <param name="serviceProvider"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.FastContext.GetConfig``1(System.String)">
            <summary>
            获取配置
            </summary>
            <typeparam name="TOptions">强类型选项类</typeparam>
            <param name="path"><see cref="T:System.String"/> 配置中对应的Key</param>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.FastContext.GetOptions``1">
            <summary>
            配置选项
            </summary>
            <typeparam name="TOptions">强类型选项类</typeparam>
            <returns></returns>
        </member>
        <member name="M:Fast.NET.Core.FastContext.GetCurrentStartupUri">
            <summary>
            获取当前程序启动Uri信息
            <remarks>默认获取第一个地址，可能为空，请勿在程序启动过程中使用</remarks>
            </summary>
            <returns><see cref="T:System.Uri"/></returns>
        </member>
        <member name="M:Fast.NET.Core.FastContext.GetServiceLifetime(System.Type)">
            <summary>
            获取服务注册的生命周期类型
            </summary>
            <param name="serviceType"></param>
            <returns></returns>
        </member>
        <member name="T:Fast.NET.Core.CorsAccessorExtension">
            <summary>
            <see cref="T:Fast.NET.Core.CorsAccessorExtension"/> 跨域处理 拓展类
            </summary>
        </member>
        <member name="F:Fast.NET.Core.CorsAccessorExtension._defaultExposedHeaders">
            <summary>
            默认跨域导出响应头 Key
            </summary>
            <remarks>解决 ajax，XMLHttpRequest，axios 不能获取请求头问题</remarks>
        </member>
        <member name="M:Fast.NET.Core.CorsAccessorExtension.SetCorsPolicy(Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder,Fast.NET.Core.Options.CorsAccessorSettingsOptions,System.Boolean)">
            <summary>
            设置跨域策略
            </summary>
            <param name="builder"><see cref="T:Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder"/></param>
            <param name="corsAccessorSettings"><see cref="T:Fast.NET.Core.Options.CorsAccessorSettingsOptions"/></param>
            <param name="isMiddleware"><see cref="T:System.Boolean"/></param>
        </member>
        <member name="M:Fast.NET.Core.CorsAccessorExtension.AddCorsAccessor(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String)">
            <summary>
            添加跨域服务
            </summary>
            <param name="services"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
            <param name="section"><see cref="T:System.String"/>
            <para>Json配置文件节点的Key</para>
            <remarks>默认值：CorsAccessorSettings</remarks>
            </param>
            <returns><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="M:Fast.NET.Core.CorsAccessorExtension.AddCorsAccessor(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Fast.NET.Core.Options.CorsAccessorSettingsOptions})">
            <summary>
            添加跨域服务
            </summary>
            <param name="services"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
            <param name="optionAction"><see cref="T:System.Action`1"/></param>
            <returns><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="T:Fast.NET.Core.GzipCompressionExtension">
            <summary>
            <see cref="T:Fast.NET.Core.GzipCompressionExtension"/> Gzip压缩 拓展类
            </summary>
        </member>
        <member name="M:Fast.NET.Core.GzipCompressionExtension.AddGzipCompression(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            添加Gzip压缩
            </summary>
            <param name="services"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
            <returns><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="T:Fast.NET.Core.IApplicationBuilderExtension">
            <summary>
            <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/> 拓展类
            </summary>
        </member>
        <member name="M:Fast.NET.Core.IApplicationBuilderExtension.EnableBuffering(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            启用 Body 重复读功能
            </summary>
            <remarks>须在 app.UseRouting() 之前注册</remarks>
            <param name="app"><see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/></param>
            <returns><see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/></returns>
        </member>
        <member name="T:Fast.NET.Core.IConfigurationExtension">
            <summary>
            <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/> 拓展类
            </summary>
        </member>
        <member name="M:Fast.NET.Core.IConfigurationExtension.Reload(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            刷新配置对象
            </summary>
            <param name="configuration"><see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></param>
            <returns><see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></returns>
        </member>
        <member name="T:Fast.NET.Core.IServiceCollectionExtension">
            <summary>
            <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> 拓展类
            </summary>
        </member>
        <member name="M:Fast.NET.Core.IServiceCollectionExtension.AddMvcFilter``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.AspNetCore.Mvc.MvcOptions})">
            <summary>
            注册 Mvc 过滤器
            </summary>
            <typeparam name="TFilter"></typeparam>
            <param name="services"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
            <param name="configure"></param>
            <returns>&lt;see cref="IServiceCollection"/&gt;</returns>
        </member>
        <member name="M:Fast.NET.Core.IServiceCollectionExtension.AddMvcFilter(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata,System.Action{Microsoft.AspNetCore.Mvc.MvcOptions})">
            <summary>
            注册 Mvc 过滤器
            </summary>
            <param name="services"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
            <param name="filter"></param>
            <param name="configure"></param>
            <returns><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="T:Fast.NET.Core.WebApplicationBuilderExtension">
            <summary>
            <see cref="T:Microsoft.AspNetCore.Builder.WebApplicationBuilder"/> 拓展类
            </summary>
        </member>
        <member name="M:Fast.NET.Core.WebApplicationBuilderExtension.EighteenK(Microsoft.AspNetCore.Builder.WebApplicationBuilder)">
            <summary>
            框架初始化
            </summary>
            <param name="builder"><see cref="T:Microsoft.AspNetCore.Builder.WebApplicationBuilder"/></param>
            <returns><see cref="T:Microsoft.AspNetCore.Builder.WebApplicationBuilder"/></returns>
        </member>
        <member name="M:Fast.NET.Core.WebApplicationBuilderExtension.HelloNet(Microsoft.AspNetCore.Builder.WebApplicationBuilder)">
            <summary>
            框架初始化
            </summary>
            <param name="builder"><see cref="T:Microsoft.AspNetCore.Builder.WebApplicationBuilder"/></param>
            <returns><see cref="T:Microsoft.AspNetCore.Builder.WebApplicationBuilder"/></returns>
        </member>
        <member name="M:Fast.NET.Core.WebApplicationBuilderExtension.Initialize(Microsoft.AspNetCore.Builder.WebApplicationBuilder)">
            <summary>
            框架初始化
            </summary>
            <param name="builder"><see cref="T:Microsoft.AspNetCore.Builder.WebApplicationBuilder"/></param>
            <returns><see cref="T:Microsoft.AspNetCore.Builder.WebApplicationBuilder"/></returns>
        </member>
        <member name="M:Fast.NET.Core.WebApplicationBuilderExtension.ConfigureApplication(Microsoft.AspNetCore.Hosting.IWebHostBuilder,Microsoft.Extensions.Hosting.IHostBuilder)">
            <summary>
            配置 Application
            </summary>
            <param name="builder"></param>
            <param name="hostBuilder"></param>
        </member>
        <member name="P:Fast.NET.Core.WebApplicationBuilderExtension.InternalConfigurationScanDirectories">
            <summary>
            默认配置文件扫描目录
            </summary>
        </member>
        <member name="F:Fast.NET.Core.WebApplicationBuilderExtension.excludeJsonPrefixArr">
            <summary>
            排除的配置文件前缀
            </summary>
        </member>
        <member name="F:Fast.NET.Core.WebApplicationBuilderExtension.runtimeJsonSuffixArr">
            <summary>
            排除运行时 Json 后缀
            </summary>
        </member>
        <member name="M:Fast.NET.Core.WebApplicationBuilderExtension.AddJsonFiles(Microsoft.Extensions.Configuration.IConfigurationBuilder,Microsoft.Extensions.Hosting.IHostEnvironment)">
            <summary>
            添加 JSON 文件
            </summary>
            <param name="configurationBuilder"></param>
            <param name="hostEnvironment"></param>
        </member>
        <member name="M:Fast.NET.Core.WebApplicationBuilderExtension.SplitConfigFileNameToGroups(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            对配置文件名进行分组
            </summary>
            <param name="configFiles"></param>
            <returns></returns>
        </member>
        <member name="T:Fast.NET.Core.Filters.CoreStartupFilter">
            <summary>
            <see cref="T:Fast.NET.Core.Filters.CoreStartupFilter"/> 应用启动时自动注册中间件
            </summary>
        </member>
        <member name="M:Fast.NET.Core.Filters.CoreStartupFilter.Configure(System.Action{Microsoft.AspNetCore.Builder.IApplicationBuilder})">
            <summary>
            配置中间件
            </summary>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="T:Fast.NET.Core.Filters.CorsAccessorStartupFilter">
            <summary>
            <see cref="T:Fast.NET.Core.Filters.CorsAccessorStartupFilter"/> 应用启动时自动注册中间件
            </summary>
        </member>
        <member name="M:Fast.NET.Core.Filters.CorsAccessorStartupFilter.Configure(System.Action{Microsoft.AspNetCore.Builder.IApplicationBuilder})">
            <summary>
            配置中间件
            </summary>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="T:Fast.NET.Core.Filters.GzipCompressionStartupFilter">
            <summary>
            <see cref="T:Fast.NET.Core.Filters.GzipCompressionStartupFilter"/> 应用启动时自动注册中间件
            </summary>
        </member>
        <member name="M:Fast.NET.Core.Filters.GzipCompressionStartupFilter.Configure(System.Action{Microsoft.AspNetCore.Builder.IApplicationBuilder})">
            <summary>
            配置中间件
            </summary>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="T:Fast.NET.Core.Options.CorsAccessorSettingsOptions">
            <summary>
            跨域配置选项
            </summary>
        </member>
        <member name="P:Fast.NET.Core.Options.CorsAccessorSettingsOptions.PolicyName">
            <summary>
            策略名称
            </summary>
        </member>
        <member name="P:Fast.NET.Core.Options.CorsAccessorSettingsOptions.WithOrigins">
            <summary>
            允许来源域名，没有配置则允许所有来源
            </summary>
        </member>
        <member name="P:Fast.NET.Core.Options.CorsAccessorSettingsOptions.WithHeaders">
            <summary>
            请求表头，没有配置则允许所有表头
            </summary>
        </member>
        <member name="P:Fast.NET.Core.Options.CorsAccessorSettingsOptions.WithExposedHeaders">
            <summary>
            设置客户端可获取的响应标头
            </summary>
        </member>
        <member name="P:Fast.NET.Core.Options.CorsAccessorSettingsOptions.WithMethods">
            <summary>
            设置跨域允许请求谓词，没有配置则允许所有
            </summary>
        </member>
        <member name="P:Fast.NET.Core.Options.CorsAccessorSettingsOptions.AllowCredentials">
            <summary>
            是否允许跨域请求中的凭据
            </summary>
        </member>
        <member name="P:Fast.NET.Core.Options.CorsAccessorSettingsOptions.SetPreflightMaxAge">
            <summary>
            设置预检过期时间
            </summary>
        </member>
        <member name="P:Fast.NET.Core.Options.CorsAccessorSettingsOptions.FixedClientToken">
            <summary>
            修正前端无法获取 Token 问题
            </summary>
        </member>
        <member name="P:Fast.NET.Core.Options.CorsAccessorSettingsOptions.SignalRSupport">
            <summary>
            启用 SignalR 跨域支持
            </summary>
        </member>
        <member name="M:Fast.NET.Core.Options.CorsAccessorSettingsOptions.PostConfigure">
            <summary>
            后期配置
            </summary>
        </member>
        <member name="T:Fast.NET.Core.RemoteRequest.RemoteRequestUtil">
            <summary>
            远程请求工具类
            </summary>
        </member>
        <member name="M:Fast.NET.Core.RemoteRequest.RemoteRequestUtil.GetDaySentence">
            <summary>
            得到每日一句
            </summary>
            <returns></returns>
        </member>
        <member name="P:Fast.NET.Core.RemoteRequest.DaySentenceEntity.Picture2">
            <summary>
            图片2
            </summary>
        </member>
        <member name="P:Fast.NET.Core.RemoteRequest.DaySentenceEntity.Caption">
            <summary>
            说明
            </summary>
        </member>
        <member name="P:Fast.NET.Core.RemoteRequest.DaySentenceEntity.Note">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:Fast.NET.Core.RemoteRequest.DaySentenceEntity.Content">
            <summary>
            英文内容
            </summary>
        </member>
        <member name="P:Fast.NET.Core.RemoteRequest.DaySentenceEntity.ShareImg">
            <summary>
            分享图片
            </summary>
        </member>
        <member name="P:Fast.NET.Core.RemoteRequest.DaySentenceEntity.DateTime">
            <summary>
            时间
            </summary>
        </member>
        <member name="P:Fast.NET.Core.RemoteRequest.WeatherInfoEntity.Yesterday">
            <summary>
            昨日天气
            </summary>
        </member>
        <member name="P:Fast.NET.Core.RemoteRequest.WeatherInfoEntity.City">
            <summary>
            城市
            </summary>
        </member>
        <member name="P:Fast.NET.Core.RemoteRequest.WeatherInfoEntity.Forecast">
            <summary>
            未来五天天气
            </summary>
        </member>
        <member name="P:Fast.NET.Core.RemoteRequest.WeatherInfoEntity.Ganmao">
            <summary>
            感冒
            </summary>
        </member>
        <member name="P:Fast.NET.Core.RemoteRequest.WeatherInfoEntity.Wendu">
            <summary>
            温度
            </summary>
        </member>
        <member name="P:Fast.NET.Core.RemoteRequest.WeatherInfoEntity.Success">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="P:Fast.NET.Core.RemoteRequest.WeatherInfoEntity.Desc">
            <summary>
            失败描述
            </summary>
        </member>
        <member name="T:Fast.NET.Core.RemoteRequest.WeatherInfoEntity.WeatherInfo">
            <summary>
            天气信息
            </summary>
        </member>
        <member name="P:Fast.NET.Core.RemoteRequest.WeatherInfoEntity.WeatherInfo.Date">
            <summary>
            时间
            </summary>
        </member>
        <member name="P:Fast.NET.Core.RemoteRequest.WeatherInfoEntity.WeatherInfo.High">
            <summary>
            最高温度
            </summary>
        </member>
        <member name="P:Fast.NET.Core.RemoteRequest.WeatherInfoEntity.WeatherInfo.Fengli">
            <summary>
            风力
            </summary>
        </member>
        <member name="P:Fast.NET.Core.RemoteRequest.WeatherInfoEntity.WeatherInfo.Low">
            <summary>
            最低温度
            </summary>
        </member>
        <member name="P:Fast.NET.Core.RemoteRequest.WeatherInfoEntity.WeatherInfo.Fengxiang">
            <summary>
            分向
            </summary>
        </member>
        <member name="P:Fast.NET.Core.RemoteRequest.WeatherInfoEntity.WeatherInfo.Type">
            <summary>
            类型
            </summary>
        </member>
    </members>
</doc>
