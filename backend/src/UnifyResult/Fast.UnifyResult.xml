<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Fast.UnifyResult</name>
    </assembly>
    <members>
        <member name="T:Fast.UnifyResult.NonUnifyAttribute">
            <summary>
            <see cref="T:Fast.UnifyResult.NonUnifyAttribute"/> 禁止规范化处理
            </summary>
        </member>
        <member name="T:Fast.UnifyResult.NonValidationAttribute">
            <summary>
            <see cref="T:Fast.UnifyResult.NonValidationAttribute"/> 跳过验证
            </summary>
        </member>
        <member name="T:Fast.UnifyResult.Contexts.UnifyContext">
            <summary>
            <see cref="T:Fast.UnifyResult.Contexts.UnifyContext"/> 规范化结果上下文
            </summary>
        </member>
        <member name="M:Fast.UnifyResult.Contexts.UnifyContext.GetRestfulResult(System.Int32,System.Boolean,System.Object,System.Object,Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            获取规范化RESTful风格返回值
            </summary>
            <param name="code"><see cref="T:System.Int32"/> 状态码</param>
            <param name="success"><see cref="T:System.Boolean"/> 执行成功</param>
            <param name="data"><see cref="T:System.Object"/> 数据</param>
            <param name="message"><see cref="T:System.String"/> 错误信息</param>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/> 请求上下文</param>
            <returns></returns>
        </member>
        <member name="P:Fast.UnifyResult.Contexts.UnifyContext.UnifyResultType">
            <summary>
            统一返回类型
            </summary>
        </member>
        <member name="M:Fast.UnifyResult.Contexts.UnifyContext.CheckSucceededNonUnify(Microsoft.AspNetCore.Http.HttpContext,System.Reflection.MethodInfo,Fast.UnifyResult.IUnifyResultProvider@,System.Boolean)">
            <summary>
            检查请求成功是否进行规范化处理
            </summary>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <param name="method"><see cref="T:System.Reflection.MethodInfo"/></param>
            <param name="unifyResult"><see cref="T:Fast.UnifyResult.IUnifyResultProvider"/></param>
            <param name="isWebRequest"><see cref="T:System.Boolean"/></param>
            <returns>返回 true 跳过处理，否则进行规范化处理</returns>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="M:Fast.UnifyResult.Contexts.UnifyContext.CheckFailedNonUnify(Microsoft.AspNetCore.Http.HttpContext,System.Reflection.MethodInfo,Fast.UnifyResult.IUnifyResultProvider@)">
            <summary>
            检查请求失败（验证失败、抛异常）是否进行规范化处理
            </summary>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <param name="method"><see cref="T:System.Reflection.MethodInfo"/></param>
            <param name="unifyResult"><see cref="T:Fast.UnifyResult.IUnifyResultProvider"/></param>
            <returns>返回 true 跳过处理，否则进行规范化处理</returns>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="M:Fast.UnifyResult.Contexts.UnifyContext.CheckResponseNonUnify(Microsoft.AspNetCore.Http.HttpContext,System.Reflection.MethodInfo,Fast.UnifyResult.IUnifyResponseProvider@)">
            <summary>
            检查请求响应数据是否进行规范化处理
            </summary>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <param name="method"><see cref="T:System.Reflection.MethodInfo"/></param>
            <param name="unifyResponse"><see cref="T:Fast.UnifyResult.IUnifyResponseProvider"/></param>
            <returns>返回 true 跳过处理，否则进行规范化处理</returns>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="M:Fast.UnifyResult.Contexts.UnifyContext.CheckStatusCodeNonUnify(Microsoft.AspNetCore.Http.HttpContext,Fast.UnifyResult.IUnifyResultProvider@)">
            <summary>
            检查短路状态码（>=400）是否进行规范化处理
            </summary>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <param name="unifyResult"><see cref="T:Fast.UnifyResult.IUnifyResultProvider"/></param>
            <returns>返回 true 跳过处理，否则进行规范化处理</returns>
        </member>
        <member name="M:Fast.UnifyResult.Contexts.UnifyContext.CheckValidResult(Microsoft.AspNetCore.Mvc.IActionResult,System.Object@)">
            <summary>
            检查是否是有效的结果（可进行规范化的结果）
            </summary>
            <param name="result"><see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/></param>
            <param name="data"><see cref="T:System.Object"/></param>
            <returns></returns>
        </member>
        <member name="M:Fast.UnifyResult.Contexts.UnifyContext.GetValidationMetadata(System.Object)">
            <summary>
            获取验证错误信息
            </summary>
            <param name="errors"><see cref="T:System.Object"/></param>
            <returns><see cref="T:Fast.UnifyResult.Metadatas.ValidationMetadata"/></returns>
        </member>
        <member name="M:Fast.UnifyResult.Contexts.UnifyContext.GetExceptionMetadata(Microsoft.AspNetCore.Mvc.ActionContext)">
            <summary>
            获取异常元数据
            </summary>
            <param name="context"><see cref="T:Microsoft.AspNetCore.Mvc.ActionContext"/></param>
            <returns><see cref="T:Fast.UnifyResult.Metadatas.ExceptionMetadata"/></returns>
        </member>
        <member name="T:Fast.UnifyResult.IServiceCollectionExtension">
            <summary>
            <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> 统一返回 拓展类
            </summary>
        </member>
        <member name="M:Fast.UnifyResult.IServiceCollectionExtension.AddUnifyResult(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            添加统一返回服务
            </summary>
            <param name="services"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
            <param name="configuration"><see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></param>
            <returns><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="T:Fast.UnifyResult.Filters.DataValidationFilter">
            <summary>
            <see cref="T:Fast.UnifyResult.Filters.DataValidationFilter"/> 数据验证拦截器
            </summary>
        </member>
        <member name="F:Fast.UnifyResult.Filters.DataValidationFilter._apiBehaviorOptions">
            <summary>
            Api 行为配置选项
            </summary>
        </member>
        <member name="M:Fast.UnifyResult.Filters.DataValidationFilter.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.ApiBehaviorOptions})">
            <summary>
            构造函数
            </summary>
            <param name="options"></param>
        </member>
        <member name="F:Fast.UnifyResult.Filters.DataValidationFilter.FilterOrder">
            <summary>
            过滤器排序
            </summary>
        </member>
        <member name="P:Fast.UnifyResult.Filters.DataValidationFilter.Order">
            <summary>
            排序属性
            </summary>
        </member>
        <member name="M:Fast.UnifyResult.Filters.DataValidationFilter.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate)">
            <summary>
            拦截请求
            </summary>
            <param name="context">动作方法上下文</param>
            <param name="next">中间件委托</param>
            <returns></returns>
        </member>
        <member name="M:Fast.UnifyResult.Filters.DataValidationFilter.CallUnHandleResult(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate,Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor,System.Reflection.MethodInfo)">
            <summary>
            调用未处理的结果类型
            </summary>
            <param name="context"></param>
            <param name="next"></param>
            <param name="actionDescriptor"></param>
            <param name="method"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.UnifyResult.Filters.DataValidationFilter.HandleValidation(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,System.Reflection.MethodInfo,Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor,System.Object,Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext,Fast.IaaS.UserFriendlyException)">
            <summary>
            内部处理异常
            </summary>
            <param name="context"></param>
            <param name="method"></param>
            <param name="actionDescriptor"></param>
            <param name="errors"></param>
            <param name="resultContext"></param>
            <param name="userFriendlyException"></param>
            <returns>返回 false 表示结果没有处理</returns>
        </member>
        <member name="T:Fast.UnifyResult.Filters.FriendlyExceptionFilter">
            <summary>
            <see cref="T:Fast.UnifyResult.Filters.FriendlyExceptionFilter"/> 友好异常拦截器
            </summary>
        </member>
        <member name="M:Fast.UnifyResult.Filters.FriendlyExceptionFilter.OnExceptionAsync(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)">
            <summary>
            异常拦截
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Fast.UnifyResult.Filters.SucceededUnifyResultFilter">
            <summary>
            <see cref="T:Fast.UnifyResult.Filters.SucceededUnifyResultFilter"/> 规范化结构（请求成功）过滤器
            </summary>
        </member>
        <member name="F:Fast.UnifyResult.Filters.SucceededUnifyResultFilter.FilterOrder">
            <summary>
            过滤器排序
            </summary>
        </member>
        <member name="P:Fast.UnifyResult.Filters.SucceededUnifyResultFilter.Order">
            <summary>
            排序属性
            </summary>
        </member>
        <member name="M:Fast.UnifyResult.Filters.SucceededUnifyResultFilter.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate)">
            <summary>
            处理规范化结果
            </summary>
            <param name="context"></param>
            <param name="next"></param>
            <returns></returns>
        </member>
        <member name="T:Fast.UnifyResult.Filters.UnifyResultStartupFilter">
            <summary>
            <see cref="T:Fast.UnifyResult.Filters.UnifyResultStartupFilter"/> 应用启动时自动注册中间件
            </summary>
        </member>
        <member name="M:Fast.UnifyResult.Filters.UnifyResultStartupFilter.Configure(System.Action{Microsoft.AspNetCore.Builder.IApplicationBuilder})">
            <summary>
            配置中间件
            </summary>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="T:Fast.UnifyResult.IGlobalExceptionHandler">
            <summary>
            <see cref="T:Fast.UnifyResult.IGlobalExceptionHandler"/> 全局异常处理
            </summary>
        </member>
        <member name="M:Fast.UnifyResult.IGlobalExceptionHandler.OnExceptionAsync(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext,System.Boolean,System.Boolean)">
            <summary>
            异常拦截
            </summary>
            <param name="context"><see cref="T:Microsoft.AspNetCore.Mvc.Filters.ExceptionContext"/></param>
            <param name="isUserFriendlyException"><see cref="T:System.Boolean"/> 是否友好异常</param>
            <param name="isValidationException"><see cref="T:System.Boolean"/> 是否验证异常</param>
            <returns></returns>
        </member>
        <member name="T:Fast.UnifyResult.IRequestCipherHandler">
            <summary>
            <see cref="T:Fast.UnifyResult.IRequestCipherHandler"/> 请求解密响应加密处理
            </summary>
        </member>
        <member name="M:Fast.UnifyResult.IRequestCipherHandler.DecipherAsync(Microsoft.AspNetCore.Http.HttpContext,Fast.IaaS.HttpRequestMethodEnum,System.Collections.Generic.IDictionary{System.String,System.Object},Fast.UnifyResult.Inputs.RequestDecryptInput)">
            <summary>
            请求解密
            </summary>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/> 请求上下文</param>
            <param name="requestMethod"><see cref="T:Fast.IaaS.HttpRequestMethodEnum"/> 请求方式</param>
            <param name="plaintextData"><see cref="T:System.Collections.Generic.IDictionary`2"/> 明文数据（解密后的数据）</param>
            <param name="ciphertextData"><see cref="T:Fast.UnifyResult.Inputs.RequestDecryptInput"/> 密文数据（请求源数据）</param>
            <returns></returns>
        </member>
        <member name="M:Fast.UnifyResult.IRequestCipherHandler.EncipherAsync(Microsoft.AspNetCore.Http.HttpContext,Fast.IaaS.HttpRequestMethodEnum,System.Object,System.Object)">
            <summary>
            响应加密
            </summary>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/> 请求上下文</param>
            <param name="requestMethod"><see cref="T:Fast.IaaS.HttpRequestMethodEnum"/> 请求方式</param>
            <param name="plaintextData"><see cref="T:System.Object"/> 明文数据（返回源数据）</param>
            <param name="ciphertextData"><see cref="T:System.Object"/> 密文数据（加密后的数据）</param>
            <returns></returns>
        </member>
        <member name="M:Fast.UnifyResult.IRequestCipherHandler.DecipherExceptionAsync(Microsoft.AspNetCore.Http.HttpContext,System.Exception)">
            <summary>
            解密异常
            </summary>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/> 请求上下文</param>
            <param name="exception"><see cref="T:System.Exception"/> 异常信息</param>
            <returns></returns>
        </member>
        <member name="M:Fast.UnifyResult.IRequestCipherHandler.EncipherExceptionAsync(Microsoft.AspNetCore.Http.HttpContext,System.Exception)">
            <summary>
            加密异常
            </summary>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/> 请求上下文</param>
            <param name="exception"><see cref="T:System.Exception"/> 异常信息</param>
            <returns></returns>
        </member>
        <member name="T:Fast.UnifyResult.Inputs.RequestDecryptInput">
            <summary>
            <see cref="T:Fast.UnifyResult.Inputs.RequestDecryptInput"/> 请求加密输入
            </summary>
        </member>
        <member name="P:Fast.UnifyResult.Inputs.RequestDecryptInput.Data">
            <summary>
            请求数据
            </summary>
        </member>
        <member name="P:Fast.UnifyResult.Inputs.RequestDecryptInput.Timestamp">
            <summary>
            时间戳
            <remarks>一定要是毫秒时间戳，13位</remarks>
            </summary>
        </member>
        <member name="T:Fast.UnifyResult.Internal.Penetrates">
            <summary>
            <see cref="T:Fast.UnifyResult.Internal.Penetrates"/> 常量，公共方法配置类
            </summary>
        </member>
        <member name="P:Fast.UnifyResult.Internal.Penetrates.RequestCipher">
            <summary>
            请求解密响应加密
            </summary>
        </member>
        <member name="T:Fast.UnifyResult.Metadatas.ExceptionMetadata">
            <summary>
            <see cref="T:Fast.UnifyResult.Metadatas.ExceptionMetadata"/> 异常元数据
            </summary>
        </member>
        <member name="P:Fast.UnifyResult.Metadatas.ExceptionMetadata.StatusCode">
            <summary>
            状态码
            </summary>
        </member>
        <member name="P:Fast.UnifyResult.Metadatas.ExceptionMetadata.ErrorCode">
            <summary>
            错误码
            </summary>
        </member>
        <member name="P:Fast.UnifyResult.Metadatas.ExceptionMetadata.OriginErrorCode">
            <summary>
            错误码（没被复写过的 ErrorCode ）
            </summary>
        </member>
        <member name="P:Fast.UnifyResult.Metadatas.ExceptionMetadata.Errors">
            <summary>
            错误对象（信息）
            </summary>
        </member>
        <member name="P:Fast.UnifyResult.Metadatas.ExceptionMetadata.Data">
            <summary>
            额外数据
            </summary>
        </member>
        <member name="T:Fast.UnifyResult.Metadatas.ValidationMetadata">
            <summary>
            <see cref="T:Fast.UnifyResult.Metadatas.ValidationMetadata"/> 验证信息元数据
            </summary>
        </member>
        <member name="P:Fast.UnifyResult.Metadatas.ValidationMetadata.ValidationResult">
            <summary>
            验证结果
            </summary>
            <remarks>返回字典或字符串类型</remarks>
        </member>
        <member name="P:Fast.UnifyResult.Metadatas.ValidationMetadata.Message">
            <summary>
            异常消息
            </summary>
        </member>
        <member name="P:Fast.UnifyResult.Metadatas.ValidationMetadata.ModelState">
            <summary>
            验证状态
            </summary>
        </member>
        <member name="P:Fast.UnifyResult.Metadatas.ValidationMetadata.ErrorCode">
            <summary>
            错误码
            </summary>
        </member>
        <member name="P:Fast.UnifyResult.Metadatas.ValidationMetadata.OriginErrorCode">
            <summary>
            错误码（没被复写过的 ErrorCode ）
            </summary>
        </member>
        <member name="P:Fast.UnifyResult.Metadatas.ValidationMetadata.StatusCode">
            <summary>
            状态码
            </summary>
        </member>
        <member name="P:Fast.UnifyResult.Metadatas.ValidationMetadata.FirstErrorProperty">
            <summary>
            首个错误属性
            </summary>
        </member>
        <member name="P:Fast.UnifyResult.Metadatas.ValidationMetadata.FirstErrorMessage">
            <summary>
            首个错误消息
            </summary>
        </member>
        <member name="P:Fast.UnifyResult.Metadatas.ValidationMetadata.Data">
            <summary>
            额外数据
            </summary>
        </member>
        <member name="T:Fast.UnifyResult.Middlewares.RequestDecryptMiddleware">
            <summary>
            <see cref="T:Fast.UnifyResult.Middlewares.RequestDecryptMiddleware"/> 请求解密中间件
            </summary>
        </member>
        <member name="T:Fast.UnifyResult.Middlewares.UnifyResultStatusCodesMiddleware">
            <summary>
            <see cref="T:Fast.UnifyResult.Middlewares.UnifyResultStatusCodesMiddleware"/> 状态码中间件
            </summary>
        </member>
        <member name="F:Fast.UnifyResult.Middlewares.UnifyResultStatusCodesMiddleware._next">
            <summary>
            请求委托
            </summary>
        </member>
        <member name="M:Fast.UnifyResult.Middlewares.UnifyResultStatusCodesMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            构造函数
            </summary>
            <param name="next"></param>
        </member>
        <member name="M:Fast.UnifyResult.Middlewares.UnifyResultStatusCodesMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            中间件执行方法
            </summary>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <returns></returns>
        </member>
        <member name="T:Fast.UnifyResult.IUnifyResponseProvider">
            <summary>
            <see cref="T:Fast.UnifyResult.IUnifyResponseProvider"/> 规范化响应数据提供器
            </summary>
        </member>
        <member name="M:Fast.UnifyResult.IUnifyResponseProvider.ResponseExceptionAsync(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext,Fast.UnifyResult.Metadatas.ExceptionMetadata,Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            响应异常处理
            </summary>
            <param name="context"><see cref="T:Microsoft.AspNetCore.Mvc.Filters.ExceptionContext"/></param>
            <param name="metadata"><see cref="T:Fast.UnifyResult.Metadatas.ExceptionMetadata"/> 异常元数据</param>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/> 请求上下文</param>
            <returns></returns>
        </member>
        <member name="M:Fast.UnifyResult.IUnifyResponseProvider.ResponseValidationExceptionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Fast.UnifyResult.Metadatas.ValidationMetadata,Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            响应数据验证异常处理
            </summary>
            <param name="context"><see cref="T:Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext"/></param>
            <param name="metadata"><see cref="T:Fast.UnifyResult.Metadatas.ValidationMetadata"/> 验证信息元数据</param>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/> 请求上下文</param>
            <returns></returns>
        </member>
        <member name="M:Fast.UnifyResult.IUnifyResponseProvider.ResponseDataAsync(System.Int64,System.Object,Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            响应数据处理
            <remarks>只有响应成功且为正常返回才会调用</remarks>
            </summary>
            <param name="timestamp"><see cref="T:System.Int64"/> 响应时间戳</param>
            <param name="data"><see cref="T:System.Object"/> 数据</param>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/> 请求上下文</param>
            <returns></returns>
        </member>
        <member name="T:Fast.UnifyResult.IUnifyResultProvider">
            <summary>
            <see cref="T:Fast.UnifyResult.IUnifyResultProvider"/> 规范化结果提供器
            </summary>
        </member>
        <member name="M:Fast.UnifyResult.IUnifyResultProvider.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext,Fast.UnifyResult.Metadatas.ExceptionMetadata,System.Nullable{System.Int32},System.String)">
            <summary>
            异常返回值
            </summary>
            <param name="context"><see cref="T:Microsoft.AspNetCore.Mvc.Filters.ExceptionContext"/></param>
            <param name="metadata"><see cref="T:Fast.UnifyResult.Metadatas.ExceptionMetadata"/> 异常元数据</param>
            <param name="statusCode"><see cref="T:System.Int32"/> 更改的状态码</param>
            <param name="message"><see cref="T:System.String"/> 返回的错误消息</param>
            <returns><see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/></returns>
        </member>
        <member name="M:Fast.UnifyResult.IUnifyResultProvider.OnSucceeded(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext,System.Object)">
            <summary>
            成功返回值
            </summary>
            <param name="context"><see cref="T:Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext"/></param>
            <param name="data"></param>
            <returns><see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/></returns>
        </member>
        <member name="M:Fast.UnifyResult.IUnifyResultProvider.OnValidateFailed(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Fast.UnifyResult.Metadatas.ValidationMetadata)">
            <summary>
            验证失败返回值
            </summary>
            <param name="context"><see cref="T:Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext"/></param>
            <param name="metadata"><see cref="T:Fast.UnifyResult.Metadatas.ValidationMetadata"/> 验证信息元数据</param>
            <returns><see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/></returns>
        </member>
        <member name="M:Fast.UnifyResult.IUnifyResultProvider.OnResponseStatusCodes(Microsoft.AspNetCore.Http.HttpContext,System.Int32)">
            <summary>
            拦截返回状态码
            </summary>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <param name="statusCode"><see cref="T:System.Int32"/> 状态码</param>
            <returns></returns>
        </member>
        <member name="T:Fast.UnifyResult.Providers.RestfulResultProvider">
            <summary>
            <see cref="T:Fast.UnifyResult.Providers.RestfulResultProvider"/> 规范化RESTful风格返回值
            </summary>
        </member>
        <member name="M:Fast.UnifyResult.Providers.RestfulResultProvider.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext,Fast.UnifyResult.Metadatas.ExceptionMetadata,System.Nullable{System.Int32},System.String)">
            <summary>
            异常返回值
            </summary>
            <param name="context"><see cref="T:Microsoft.AspNetCore.Mvc.Filters.ExceptionContext"/></param>
            <param name="metadata"><see cref="T:Fast.UnifyResult.Metadatas.ExceptionMetadata"/> 异常元数据</param>
            <param name="statusCode"><see cref="T:System.Int32"/> 更改的状态码</param>
            <param name="message"><see cref="T:System.String"/> 返回的错误消息</param>
            <returns><see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/></returns>
        </member>
        <member name="M:Fast.UnifyResult.Providers.RestfulResultProvider.OnSucceeded(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext,System.Object)">
            <summary>
            成功返回值
            </summary>
            <param name="context"><see cref="T:Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext"/></param>
            <param name="data"></param>
            <returns><see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/></returns>
        </member>
        <member name="M:Fast.UnifyResult.Providers.RestfulResultProvider.OnValidateFailed(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Fast.UnifyResult.Metadatas.ValidationMetadata)">
            <summary>
            验证失败返回值
            </summary>
            <param name="context"><see cref="T:Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext"/></param>
            <param name="metadata"><see cref="T:Fast.UnifyResult.Metadatas.ValidationMetadata"/> 验证信息元数据</param>
            <returns><see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/></returns>
        </member>
        <member name="M:Fast.UnifyResult.Providers.RestfulResultProvider.OnResponseStatusCodes(Microsoft.AspNetCore.Http.HttpContext,System.Int32)">
            <summary>
            拦截返回状态码
            </summary>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <param name="statusCode"><see cref="T:System.Int32"/> 状态码</param>
            <returns></returns>
        </member>
        <member name="M:Fast.UnifyResult.Providers.RestfulResultProvider.GetRestfulResult(System.Int32,System.Boolean,System.Object,System.Object,Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            获取规范化RESTful风格返回值
            </summary>
            <param name="code"><see cref="T:System.Int32"/> 状态码</param>
            <param name="success"><see cref="T:System.Boolean"/> 执行成功</param>
            <param name="data"><see cref="T:System.Object"/> 数据</param>
            <param name="message"><see cref="T:System.String"/> 错误信息</param>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/> 请求上下文</param>
            <returns></returns>
        </member>
        <member name="T:Fast.UnifyResult.Results.RestfulResult`1">
            <summary>
            <see cref="T:Fast.UnifyResult.Results.RestfulResult`1"/> RESTful风格返回格式
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Fast.UnifyResult.Results.RestfulResult`1.Success">
            <summary>
            执行成功
            </summary>
        </member>
        <member name="P:Fast.UnifyResult.Results.RestfulResult`1.Code">
            <summary>
            状态码
            </summary>
        </member>
        <member name="P:Fast.UnifyResult.Results.RestfulResult`1.Message">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="P:Fast.UnifyResult.Results.RestfulResult`1.Data">
            <summary>
            数据
            </summary>
        </member>
        <member name="P:Fast.UnifyResult.Results.RestfulResult`1.Timestamp">
            <summary>
            时间戳
            </summary>
        </member>
    </members>
</doc>
