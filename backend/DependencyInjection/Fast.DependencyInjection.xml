<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Fast.DependencyInjection</name>
    </assembly>
    <members>
        <member name="T:Fast.DependencyInjection.Injections.DependencyInjectionInjection">
            <summary>
            <see cref="T:Fast.DependencyInjection.Injections.DependencyInjectionInjection"/> 依赖注入服务注册
            </summary>
        </member>
        <member name="P:Fast.DependencyInjection.Injections.DependencyInjectionInjection.Order">
            <summary>
            排序
            <remarks>
            <para>顺序越大，越优先注册</para>
            <para>建议最大不超过9999</para>
            </remarks>
            </summary>
        </member>
        <member name="F:Fast.DependencyInjection.Injections.DependencyInjectionInjection.TypeNamedCollection">
            <summary>
            类型名称集合
            </summary>
        </member>
        <member name="M:Fast.DependencyInjection.Injections.DependencyInjectionInjection.Configure(Microsoft.AspNetCore.Hosting.IWebHostBuilder)">
            <summary>
            配置
            </summary>
            <param name="builder"></param>
        </member>
        <member name="M:Fast.DependencyInjection.Injections.DependencyInjectionInjection.AddInnerDependencyInjection(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            添加扫描注入
            </summary>
            <param name="services"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
            <returns><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="M:Fast.DependencyInjection.Injections.DependencyInjectionInjection.RegisterService(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Type,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            注册服务
            </summary>
            <param name="services">服务集合</param>
            <param name="dependencyType"></param>
            <param name="type">类型</param>
            <param name="canInjectInterfaces">能被注册的接口</param>
        </member>
        <member name="M:Fast.DependencyInjection.Injections.DependencyInjectionInjection.Register(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Type,System.Type)">
            <summary>
            注册类型
            </summary>
            <param name="services">服务</param>
            <param name="dependencyType"></param>
            <param name="type">类型</param>
            <param name="inter">接口</param>
        </member>
        <member name="M:Fast.DependencyInjection.Injections.DependencyInjectionInjection.FixedGenericType(System.Type)">
            <summary>
            修复泛型类型注册类型问题
            </summary>
            <param name="type">类型</param>
            <returns></returns>
        </member>
        <member name="M:Fast.DependencyInjection.Injections.DependencyInjectionInjection.RegisterNamedService``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            注册命名服务（接口多实现）
            </summary>
            <typeparam name="TDependency"></typeparam>
            <param name="services"></param>
        </member>
        <member name="M:Fast.DependencyInjection.Injections.DependencyInjectionInjection.TryGetServiceLifetime(System.Type)">
            <summary>
            根据依赖接口类型解析 ServiceLifetime 对象
            </summary>
            <param name="dependencyType"></param>
            <returns></returns>
        </member>
        <member name="T:Fast.DependencyInjection.IDependency">
            <summary>
            依赖关系接口
            </summary>
        </member>
        <member name="T:Fast.DependencyInjection.IScopedDependency">
            <summary>
            作用域服务注册依赖
            </summary>
        </member>
        <member name="T:Fast.DependencyInjection.ISingletonDependency">
            <summary>
            单例服务注册依赖
            </summary>
        </member>
        <member name="T:Fast.DependencyInjection.ITransientDependency">
            <summary>
            瞬时服务注册依赖
            </summary>
        </member>
        <member name="T:Fast.DependencyInjection.INamedServiceProvider`1">
            <summary>
            <see cref="T:Fast.DependencyInjection.INamedServiceProvider`1"/> 命名服务提供器
            </summary>
            <typeparam name="TService">目标服务接口</typeparam>
        </member>
        <member name="M:Fast.DependencyInjection.INamedServiceProvider`1.GetService``1(System.String)">
            <summary>
            根据服务名称获取服务
            </summary>
            <typeparam name="ILifetime">服务生存周期接口，<see cref="T:Fast.DependencyInjection.ITransientDependency"/>，<see cref="T:Fast.DependencyInjection.IScopedDependency"/>，<see cref="T:Fast.DependencyInjection.IScopedDependency"/></typeparam>
            <param name="serviceName"><see cref="T:System.String"/> 服务名称</param>
            <returns></returns>
        </member>
        <member name="M:Fast.DependencyInjection.INamedServiceProvider`1.GetRequiredService``1(System.String)">
            <summary>
            根据服务名称获取服务
            </summary>
            <typeparam name="ILifetime">服务生存周期接口，<see cref="T:Fast.DependencyInjection.ITransientDependency"/>，<see cref="T:Fast.DependencyInjection.IScopedDependency"/>，<see cref="T:Fast.DependencyInjection.IScopedDependency"/></typeparam>
            <param name="serviceName"><see cref="T:System.String"/> 服务名称</param>
            <returns></returns>
        </member>
        <member name="T:Fast.DependencyInjection.NamedServiceProvider`1">
            <summary>
            <see cref="T:Fast.DependencyInjection.NamedServiceProvider`1"/> 命名服务提供器默认实现
            </summary>
            <typeparam name="TService">目标服务接口</typeparam>
        </member>
        <member name="F:Fast.DependencyInjection.NamedServiceProvider`1._serviceProvider">
            <summary>
            服务提供器
            </summary>
        </member>
        <member name="M:Fast.DependencyInjection.NamedServiceProvider`1.#ctor(System.IServiceProvider)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fast.DependencyInjection.NamedServiceProvider`1.GetService``1(System.String)">
            <summary>
            根据服务名称获取服务
            </summary>
            <typeparam name="ILifetime">服务生存周期接口，<see cref="T:Fast.DependencyInjection.ITransientDependency"/>，<see cref="T:Fast.DependencyInjection.IScopedDependency"/>，<see cref="T:Fast.DependencyInjection.IScopedDependency"/></typeparam>
            <param name="serviceName"><see cref="T:System.String"/> 服务名称</param>
            <returns></returns>
        </member>
        <member name="M:Fast.DependencyInjection.NamedServiceProvider`1.GetRequiredService``1(System.String)">
            <summary>
            根据服务名称获取服务
            </summary>
            <typeparam name="ILifetime">服务生存周期接口，<see cref="T:Fast.DependencyInjection.ITransientDependency"/>，<see cref="T:Fast.DependencyInjection.IScopedDependency"/>，<see cref="T:Fast.DependencyInjection.IScopedDependency"/></typeparam>
            <param name="serviceName"><see cref="T:System.String"/> 服务名称</param>
            <returns></returns>
        </member>
    </members>
</doc>
